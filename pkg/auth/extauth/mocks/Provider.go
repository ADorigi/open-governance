// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	extauth "gitlab.com/keibiengine/keibi-engine/pkg/auth/extauth"
)

// Provider is an autogenerated mock type for the Provider type
type Provider struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: ctx, email
func (_m *Provider) CreateUser(ctx context.Context, email string) (extauth.AzureADUser, error) {
	ret := _m.Called(ctx, email)

	var r0 extauth.AzureADUser
	if rf, ok := ret.Get(0).(func(context.Context, string) extauth.AzureADUser); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Get(0).(extauth.AzureADUser)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FetchUser provides a mock function with given fields: ctx, id
func (_m *Provider) FetchUser(ctx context.Context, id string) (extauth.AzureADUser, error) {
	ret := _m.Called(ctx, id)

	var r0 extauth.AzureADUser
	if rf, ok := ret.Get(0).(func(context.Context, string) extauth.AzureADUser); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(extauth.AzureADUser)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
