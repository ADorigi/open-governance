definitions:
  api.AWSResource:
    properties:
      accountID:
        type: string
      location:
        type: string
      name:
        type: string
      resourceID:
        type: string
      resourceType:
        type: string
    type: object
  api.AllResource:
    properties:
      location:
        type: string
      name:
        type: string
      provider:
        type: string
      resourceID:
        type: string
      resourceType:
        type: string
      sourceID:
        type: string
    type: object
  api.AzureResource:
    properties:
      location:
        type: string
      name:
        type: string
      resourceGroup:
        type: string
      resourceID:
        type: string
      resourceType:
        type: string
      subscriptionID:
        type: string
    type: object
  api.ComplianceReport:
    properties:
      failureMessage:
        type: string
      id:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
    type: object
  api.ComplianceReportFilters:
    properties:
      groupID:
        type: string
      timeRange:
        $ref: '#/definitions/api.TimeRangeFilter'
    type: object
  api.CreateSourceResponse:
    properties:
      id:
        type: string
    type: object
  api.DescribeResource:
    properties:
      failureMessage:
        type: string
      resourceType:
        type: string
      status:
        type: string
    type: object
  api.DescribeSource:
    properties:
      describeResourceJobs:
        items:
          $ref: '#/definitions/api.DescribeResource'
        type: array
      status:
        type: string
    type: object
  api.DiscoverAWSAccountsResponse:
    properties:
      accountId:
        type: string
      email:
        type: string
      name:
        type: string
      organizationId:
        description: Nil if not part of an AWS organization
        type: string
      status:
        type: string
    type: object
  api.DiscoverAzureSubscriptionsResponse:
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: string
      subscriptionId:
        type: string
    type: object
  api.Filters:
    properties:
      keibiSource:
        items:
          type: string
        type: array
      location:
        items:
          type: string
        type: array
      resourceType:
        items:
          type: string
        type: array
    type: object
  api.GetAWSResourceResponse:
    properties:
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page'
      resources:
        items:
          $ref: '#/definitions/api.AWSResource'
        type: array
    type: object
  api.GetAzureResourceResponse:
    properties:
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page'
      resources:
        items:
          $ref: '#/definitions/api.AzureResource'
        type: array
    type: object
  api.GetComplianceReportRequest:
    properties:
      filters:
        $ref: '#/definitions/api.ComplianceReportFilters'
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_internal_api.Page'
      reportType:
        type: string
    type: object
  api.GetResourceRequest:
    properties:
      ID:
        type: string
      resourceType:
        type: string
    required:
    - ID
    - resourceType
    type: object
  api.GetResourcesRequest:
    properties:
      filters:
        $ref: '#/definitions/api.Filters'
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page'
      query:
        type: string
      sorts:
        items:
          $ref: '#/definitions/api.ResourceSortItem'
        type: array
    required:
    - filters
    type: object
  api.GetResourcesResponse:
    properties:
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page'
      resources:
        items:
          $ref: '#/definitions/api.AllResource'
        type: array
    type: object
  api.LocationByProviderResponse:
    properties:
      name:
        type: string
    type: object
  api.Provider:
    properties:
      enabled:
        type: boolean
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  api.ResourceSortItem:
    properties:
      direction:
        enum:
        - asc
        - desc
        type: string
      field:
        type: string
    type: object
  api.RunQueryRequest:
    properties:
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page'
      sorts:
        items:
          $ref: '#/definitions/api.SmartQuerySortItem'
        type: array
    type: object
  api.RunQueryResponse:
    properties:
      headers:
        items:
          type: string
        type: array
      page:
        $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page'
      result:
        items:
          items: {}
          type: array
        type: array
    type: object
  api.SmartQueryItem:
    properties:
      description:
        type: string
      id:
        type: string
      provider:
        type: string
      query:
        type: string
      title:
        type: string
    type: object
  api.SmartQuerySortItem:
    properties:
      direction:
        enum:
        - asc
        - desc
        type: string
      field:
        type: string
    type: object
  api.SourceConfigAWS:
    properties:
      accessKey:
        type: string
      accountId:
        type: string
      regions:
        items:
          type: string
        type: array
      secretKey:
        type: string
    required:
    - accessKey
    - accountId
    - secretKey
    type: object
  api.SourceConfigAzure:
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
      subscriptionId:
        type: string
      tenantId:
        type: string
    required:
    - clientId
    - clientSecret
    - subscriptionId
    - tenantId
    type: object
  api.TimeRangeFilter:
    properties:
      from:
        type: integer
      to:
        type: integer
    type: object
  compliance_report.Dimension:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  compliance_report.Report:
    properties:
      group:
        $ref: '#/definitions/compliance_report.ReportGroupObj'
      reportJobID:
        type: integer
      result:
        $ref: '#/definitions/compliance_report.ReportResultObj'
      sourceID:
        type: string
      type:
        type: string
    type: object
  compliance_report.ReportGroupObj:
    properties:
      controlIDs:
        items:
          type: string
        type: array
      description:
        type: string
      groupIDs:
        items:
          type: string
        type: array
      id:
        type: string
      parentGroupIDs:
        items:
          type: string
        type: array
      summary:
        $ref: '#/definitions/compliance_report.Summary'
      tags:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
    type: object
  compliance_report.ReportResultObj:
    properties:
      controlId:
        type: string
      parentGroupIDs:
        items:
          type: string
        type: array
      result:
        $ref: '#/definitions/compliance_report.Result'
    type: object
  compliance_report.Result:
    properties:
      dimensions:
        items:
          $ref: '#/definitions/compliance_report.Dimension'
        type: array
      reason:
        type: string
      resource:
        type: string
      status:
        type: string
    type: object
  compliance_report.Summary:
    properties:
      status:
        $ref: '#/definitions/compliance_report.SummaryStatus'
    type: object
  compliance_report.SummaryStatus:
    properties:
      alarm:
        type: integer
      error:
        type: integer
      info:
        type: integer
      ok:
        type: integer
      skip:
        type: integer
    type: object
  gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source:
    properties:
      id:
        type: string
      lastComplianceReportAt:
        type: string
      lastDescribedAt:
        type: string
      type:
        type: string
    type: object
  gitlab.com_keibiengine_keibi-engine_pkg_internal_api.Page:
    properties:
      nextMarker:
        type: string
      size:
        type: integer
    type: object
  gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page:
    properties:
      nextMarker:
        type: string
      size:
        type: integer
    type: object
  gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      sourceId:
        type: string
      type:
        type: string
    type: object
host: dev-cluster.keibi.io
info:
  contact: {}
  title: Keibi Service API
  version: "1.0"
paths:
  /inventory/api/v1/locations/{provider}:
    get:
      description: Getting locations by provider
      parameters:
      - description: Provider
        enum:
        - aws
        - azure
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.LocationByProviderResponse'
            type: array
      summary: Get locations
      tags:
      - location
  /inventory/api/v1/query:
    get:
      description: Listing smart queries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.SmartQueryItem'
            type: array
      summary: List smart queries
      tags:
      - smart_query
  /inventory/api/v1/query/{queryId}:
    post:
      description: |-
        Run a specific smart query.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
      parameters:
      - description: QueryID
        in: path
        name: queryId
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RunQueryRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RunQueryResponse'
      summary: Run a specific smart query
      tags:
      - smart_query
  /inventory/api/v1/resource:
    post:
      description: Getting resource details by id and resource type
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourceRequest'
      produces:
      - application/json
      responses: {}
      summary: Get details of a Resource
      tags:
      - resource
  /inventory/api/v1/resources:
    post:
      consumes:
      - application/json
      description: |-
        Getting all cloud providers resources by filters.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
        If sort by is empty, result will be sorted by the first column in ascending order.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourcesRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetResourcesResponse'
      summary: Get resources
      tags:
      - inventory
  /inventory/api/v1/resources/aws:
    post:
      consumes:
      - application/json
      description: |-
        Getting AWS resources by filters.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourcesRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetAWSResourceResponse'
      summary: Get AWS resources
      tags:
      - inventory
  /inventory/api/v1/resources/azure:
    post:
      consumes:
      - application/json
      description: |-
        Getting Azure resources by filters.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourcesRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetAzureResourceResponse'
      summary: Get Azure resources
      tags:
      - inventory
  /onboard/api/v1/{sourceId}:
    delete:
      description: Deleting a single source either AWS / Azure.
      parameters:
      - description: SourceID
        in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete a single source
      tags:
      - onboard
    get:
      description: Returning single source either AWS / Azure.
      parameters:
      - description: SourceID
        in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source'
      summary: Returns a single source
      tags:
      - onboard
  /onboard/api/v1/aws:
    post:
      description: Creating AWS source
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.SourceConfigAWS'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateSourceResponse'
      summary: Create AWS source
      tags:
      - onboard
  /onboard/api/v1/azure:
    post:
      description: Creating Azure source
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.SourceConfigAzure'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateSourceResponse'
      summary: Create Azure source
      tags:
      - onboard
  /onboard/api/v1/discover/aws/accounts:
    get:
      description: If the account is part of an organization and the account has premission
        to list the accounts, it will return all the accounts in that organization.
        Otherwise, it will return the single account these credentials belong to.
      parameters:
      - description: AccessKey
        in: body
        name: accessKey
        required: true
        schema:
          type: string
      - description: SecretKey
        in: body
        name: secretKey
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DiscoverAWSAccountsResponse'
            type: array
      summary: Returns the list of available AWS accounts given the credentials.
      tags:
      - onboard
  /onboard/api/v1/discover/azure/subscriptions:
    get:
      description: Returning the list of available Azure subscriptions.
      parameters:
      - description: TenantId
        in: body
        name: tenantId
        required: true
        schema:
          type: string
      - description: ClientId
        in: body
        name: clientId
        required: true
        schema:
          type: string
      - description: ClientSecret
        in: body
        name: clientSecret
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DiscoverAzureSubscriptionsResponse'
            type: array
      summary: Returns the list of available Azure subscriptions.
      tags:
      - onboard
  /onboard/api/v1/providers:
    get:
      description: Getting cloud providers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Provider'
            type: array
      summary: Get providers
      tags:
      - onboard
  /onboard/api/v1/sources:
    get:
      description: Returning a list of sources including both AWS and Azure unless
        filtered by Type.
      parameters:
      - description: Type
        enum:
        - aws
        - azure
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source'
            type: array
      summary: Returns a list of sources
      tags:
      - onboard
  /reports/compliance/{source_id}:
    get:
      consumes:
      - application/json
      description: Returns list of compliance report groups of specified job id (if
        not specified, last one will be returned)
      parameters:
      - description: Source ID
        in: path
        name: source_id
        required: true
        type: string
      - description: Report Job ID
        in: path
        name: report_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetComplianceReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/compliance_report.Report'
            type: array
      summary: Returns list of compliance report groups
      tags:
      - compliance_report
  /reports/compliance/{source_id}/{report_id}:
    get:
      consumes:
      - application/json
      description: Returns list of compliance report groups of specified job id (if
        not specified, last one will be returned)
      parameters:
      - description: Source ID
        in: path
        name: source_id
        required: true
        type: string
      - description: Report Job ID
        in: path
        name: report_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetComplianceReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/compliance_report.Report'
            type: array
      summary: Returns list of compliance report groups
      tags:
      - compliance_report
  /schedule/api/v1/resource_type/{provider}:
    get:
      description: get resource type by provider
      parameters:
      - description: Provider
        enum:
        - aws
        - azure
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: get resource type by provider
      tags:
      - schedule
  /schedule/api/v1/sources:
    get:
      description: Getting all of Keibi sources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source'
            type: array
      summary: List Sources
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/compliance:
    get:
      description: List source compliance reports
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      - description: From Time (TimeRange)
        in: query
        name: from
        type: integer
      - description: To Time (TimeRange)
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ComplianceReport'
            type: array
      summary: List source compliance reports
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/compliance/refresh:
    post:
      description: Run compliance report jobs
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Run compliance report jobs
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/describe:
    get:
      description: List source describe jobs
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DescribeSource'
            type: array
      summary: List source describe jobs
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/describe/refresh:
    post:
      description: Run describe jobs
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Run describe jobs
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/policy/{policy_id}:
    get:
      description: Assign source to policy
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Assign source to policy
      tags:
      - schedule
schemes:
- https
swagger: "2.0"
