definitions:
  api.AWSResource:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      location:
        type: string
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      resourceID:
        type: string
      resourceName:
        type: string
      resourceType:
        type: string
      resourceTypeName:
        type: string
    type: object
  api.AccountCompliancyResponse:
    properties:
      sourceID:
        type: string
      totalCompliant:
        type: integer
      totalResources:
        type: integer
    type: object
  api.AccountResourceCountResponse:
    properties:
      onboardDate:
        type: string
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      resourceCount:
        type: integer
      sourceID:
        type: string
    type: object
  api.AllResource:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      location:
        type: string
      provider:
        type: string
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      resourceID:
        type: string
      resourceName:
        type: string
      resourceType:
        type: string
      resourceTypeName:
        type: string
    type: object
  api.AzureResource:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      location:
        type: string
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      resourceGroup:
        type: string
      resourceID:
        type: string
      resourceName:
        type: string
      resourceType:
        type: string
      resourceTypeName:
        type: string
    type: object
  api.Benchmark:
    properties:
      description:
        type: string
      id:
        type: string
      provider:
        type: string
      state:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
    type: object
  api.BenchmarkAccountComplianceResponse:
    properties:
      totalCompliantAccounts:
        type: integer
      totalNonCompliantAccounts:
        type: integer
    type: object
  api.BenchmarkAssignedSource:
    properties:
      assignedAt:
        type: integer
      sourceId:
        type: string
    type: object
  api.BenchmarkAssignment:
    properties:
      assignedAt:
        type: integer
      benchmarkId:
        type: string
      sourceId:
        type: string
    type: object
  api.BenchmarkScoreResponse:
    properties:
      benchmarkID:
        type: string
      nonCompliantCount:
        type: integer
    type: object
  api.CategoriesResponse:
    properties:
      lastDayCount:
        type: integer
      lastQuarterCount:
        type: integer
      lastWeekCount:
        type: integer
      lastYearCount:
        type: integer
      resourceCount:
        type: integer
      serviceName:
        type: string
    type: object
  api.CategorizedMetricsResponse:
    properties:
      category:
        additionalProperties:
          items:
            $ref: '#/definitions/api.ResourceTypeResponse'
          type: array
        type: object
    type: object
  api.ChangeWorkspaceOwnershipRequest:
    properties:
      newOwnerUserID:
        type: string
    type: object
  api.ComplianceReport:
    properties:
      failureMessage:
        type: string
      id:
        type: integer
      reportCreatedAt:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
    type: object
  api.ComplianceTrendDataPoint:
    properties:
      compliant:
        type: integer
      timestamp:
        type: integer
      totalResources:
        type: integer
    type: object
  api.CreateInsightRequest:
    properties:
      category:
        type: string
      description:
        type: string
      internal:
        type: boolean
      provider:
        type: string
      query:
        type: string
      smartQueryID:
        type: integer
    type: object
  api.CreateSPNResponse:
    properties:
      id:
        type: string
    type: object
  api.CreateSourceResponse:
    properties:
      id:
        type: string
    type: object
  api.CreateWorkspaceRequest:
    properties:
      description:
        type: string
      name:
        type: string
      tier:
        type: string
    type: object
  api.CreateWorkspaceResponse:
    properties:
      id:
        type: string
    type: object
  api.DescribeResource:
    properties:
      failureMessage:
        type: string
      resourceType:
        type: string
      status:
        type: string
    type: object
  api.DescribeSource:
    properties:
      describeResourceJobs:
        items:
          $ref: '#/definitions/api.DescribeResource'
        type: array
      status:
        type: string
    type: object
  api.DiscoverAWSAccountsResponse:
    properties:
      accountId:
        type: string
      email:
        type: string
      name:
        type: string
      organizationId:
        description: Nil if not part of an AWS organization
        type: string
      status:
        type: string
    type: object
  api.DiscoverAzureSubscriptionsResponse:
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: string
      subscriptionId:
        type: string
    type: object
  api.DiscoverAzureSubscriptionsSPNRequest:
    properties:
      spnId:
        type: string
    type: object
  api.Filters:
    description: if you provide two values for same filter OR operation would be used
      if you provide value for two filters AND operation would be used
    properties:
      category:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      location:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      resourceType:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      service:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      sourceID:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      tags:
        additionalProperties:
          type: string
        description: if you dont need to use this filter, leave them empty. (e.g.
          {})
        type: object
    type: object
  api.GetAWSResourceResponse:
    properties:
      resources:
        items:
          $ref: '#/definitions/api.AWSResource'
        type: array
      totalCount:
        type: integer
    type: object
  api.GetAzureResourceResponse:
    properties:
      resources:
        items:
          $ref: '#/definitions/api.AzureResource'
        type: array
      totalCount:
        type: integer
    type: object
  api.GetBenchmarkTag:
    properties:
      count:
        type: integer
      key:
        type: string
      value:
        type: string
    type: object
  api.GetFiltersRequest:
    properties:
      filters:
        $ref: '#/definitions/api.ResourceFilters'
        description: search filters
      query:
        description: search query
        type: string
    required:
    - filters
    type: object
  api.GetFiltersResponse:
    properties:
      filters:
        $ref: '#/definitions/api.ResourceFilters'
        description: search filters
    type: object
  api.GetResourceRequest:
    properties:
      ID:
        description: Resource ID
        type: string
      resourceType:
        type: string
    required:
    - ID
    - resourceType
    type: object
  api.GetResourcesRequest:
    properties:
      filters:
        $ref: '#/definitions/api.Filters'
        description: search filters
      page:
        $ref: '#/definitions/api.Page'
      query:
        description: search query
        type: string
      sorts:
        description: 'NOTE: we don''t support multi-field sort for now, if sort is
          empty, results would be sorted by first column'
        items:
          $ref: '#/definitions/api.ResourceSortItem'
        type: array
    required:
    - filters
    - page
    type: object
  api.GetResourcesResponse:
    properties:
      resources:
        items:
          $ref: '#/definitions/api.AllResource'
        type: array
      totalCount:
        type: integer
    type: object
  api.Insight:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      provider:
        type: string
      query:
        type: string
      smartQueryID:
        type: integer
    type: object
  api.InviteResponse:
    properties:
      inviteId:
        type: string
    type: object
  api.ListInsightResultsRequest:
    properties:
      descriptionFilter:
        type: string
      labels:
        items:
          type: string
        type: array
    type: object
  api.ListInsightsRequest:
    properties:
      descriptionFilter:
        type: string
    type: object
  api.ListQueryRequest:
    properties:
      labels:
        items:
          type: string
        type: array
      providerFilter:
        type: string
      titleFilter:
        type: string
    type: object
  api.LocationByProviderResponse:
    properties:
      name:
        type: string
    type: object
  api.MetricsResponse:
    properties:
      lastDayValue:
        type: integer
      lastQuarterValue:
        type: integer
      lastWeekValue:
        type: integer
      lastYearValue:
        type: integer
      metricsName:
        type: string
      value:
        type: integer
    type: object
  api.Page:
    properties:
      "no":
        type: integer
      size:
        type: integer
    type: object
  api.Policy:
    properties:
      category:
        type: string
      commandLineRemedation:
        type: string
      description:
        type: string
      id:
        type: string
      manualRemedation:
        type: string
      manualVerification:
        type: string
      provider:
        type: string
      queryToRun:
        type: string
      section:
        type: string
      severity:
        type: string
      subcategory:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
    type: object
  api.Provider:
    properties:
      id:
        type: string
      name:
        type: string
      state:
        type: string
      type:
        type: string
    type: object
  api.ProviderType:
    properties:
      id:
        type: string
      state:
        enum:
        - enabled
        - coming_soon
        - disabled
        type: string
      typeName:
        type: string
    type: object
  api.ResourceFilters:
    description: if you provide two values for same filter OR operation would be used
      if you provide value for two filters AND operation would be used
    properties:
      category:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      location:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      provider:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      resourceType:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      service:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      tagKeys:
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        items:
          type: string
        type: array
      tagValues:
        additionalProperties:
          items:
            type: string
          type: array
        description: if you dont need to use this filter, leave them empty. (e.g.
          [])
        type: object
    type: object
  api.ResourceSortItem:
    properties:
      direction:
        enum:
        - asc
        - desc
        type: string
      field:
        enum:
        - resourceID
        - resourceName
        - provider
        - resourceType
        - resourceGroup
        - location
        - connectionID
        type: string
    type: object
  api.ResourceTypeDetail:
    properties:
      resourceTypeARN:
        type: string
      resourceTypeName:
        type: string
    type: object
  api.ResourceTypeResponse:
    properties:
      lastDayCount:
        type: integer
      lastQuarterCount:
        type: integer
      lastWeekCount:
        type: integer
      lastYearCount:
        type: integer
      resourceCount:
        type: integer
      resourceType:
        type: string
    type: object
  api.ResultCompliancy:
    properties:
      category:
        type: string
      id:
        type: string
      provider:
        type: string
      resourcesWithIssue:
        type: integer
      section:
        type: string
      severity:
        type: string
      status:
        enum:
        - passed
        - failed
        type: string
      subcategory:
        type: string
      title:
        type: string
      totalResources:
        type: integer
    type: object
  api.ResultPolicy:
    properties:
      category:
        type: string
      createdAt:
        type: integer
      describedAt:
        type: integer
      id:
        type: string
      provider:
        type: string
      section:
        type: string
      severity:
        type: string
      status:
        enum:
        - passed
        - failed
        type: string
      subcategory:
        type: string
      title:
        type: string
    type: object
  api.ResultPolicyResourceSummary:
    properties:
      compliantResourceCount:
        type: integer
      nonCompliantResourceCount:
        type: integer
      resourcesByLocation:
        additionalProperties:
          type: integer
        type: object
    type: object
  api.RoleBinding:
    properties:
      assignedAt:
        type: string
      role:
        type: string
      workspaceName:
        type: string
    type: object
  api.RunQueryRequest:
    properties:
      page:
        $ref: '#/definitions/api.Page'
      sorts:
        description: 'NOTE: we don''t support multi-field sort for now, if sort is
          empty, results would be sorted by first column'
        items:
          $ref: '#/definitions/api.SmartQuerySortItem'
        type: array
    required:
    - page
    type: object
  api.RunQueryResponse:
    properties:
      headers:
        description: column names
        items:
          type: string
        type: array
      query:
        type: string
      result:
        description: result of query. in order to access a specific cell please use
          Result[Row][Column]
        items:
          items: {}
          type: array
        type: array
      title:
        type: string
    type: object
  api.ServiceCompliancyResponse:
    properties:
      serviceName:
        type: string
      totalCompliant:
        type: integer
      totalResources:
        type: integer
    type: object
  api.ServiceDistributionItem:
    properties:
      distribution:
        additionalProperties:
          type: integer
        type: object
      serviceName:
        type: string
    type: object
  api.SmartQueryItem:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      provider:
        type: string
      query:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
    type: object
  api.SmartQuerySortItem:
    properties:
      direction:
        enum:
        - asc
        - desc
        type: string
      field:
        description: fill this with column name
        type: string
    type: object
  api.SourceConfigAWS:
    properties:
      accessKey:
        type: string
      accountId:
        type: string
      regions:
        items:
          type: string
        type: array
      secretKey:
        type: string
    required:
    - accessKey
    - accountId
    - secretKey
    type: object
  api.SourceConfigAzure:
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
      subscriptionId:
        type: string
      tenantId:
        type: string
    required:
    - clientId
    - clientSecret
    - subscriptionId
    - tenantId
    type: object
  api.TopAccountCostResponse:
    properties:
      cost:
        type: number
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      sourceID:
        type: string
    type: object
  api.TopAccountResponse:
    properties:
      provider:
        type: string
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      resourceCount:
        type: integer
      sourceID:
        type: string
    type: object
  api.TopServiceCostResponse:
    properties:
      cost:
        type: number
      serviceName:
        type: string
    type: object
  api.TopServicesResponse:
    properties:
      lastDayCount:
        type: integer
      lastQuarterCount:
        type: integer
      lastWeekCount:
        type: integer
      lastYearCount:
        type: integer
      provider:
        type: string
      resourceCount:
        type: integer
      serviceName:
        type: string
    type: object
  api.TrendDataPoint:
    properties:
      timestamp:
        type: integer
      value:
        type: integer
    type: object
  api.WorkspaceLimits:
    properties:
      maxConnections:
        type: integer
      maxResources:
        type: integer
      maxUsers:
        type: integer
    type: object
  api.WorkspaceResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      ownerId:
        type: string
      status:
        type: string
      tier:
        type: string
      uri:
        type: string
    type: object
  api.WorkspaceRoleBinding:
    properties:
      assignedAt:
        type: string
      role:
        type: string
      userId:
        type: string
    type: object
  compliance_report.SummaryStatus:
    properties:
      alarm:
        type: integer
      error:
        type: integer
      info:
        type: integer
      ok:
        type: integer
      skip:
        type: integer
    type: object
  connector.Category:
    properties:
      category_id:
        type: string
      category_name:
        type: string
    type: object
  connector.Connector:
    properties:
      connector_description:
        type: string
      connector_icon:
        type: string
      connector_id:
        type: string
      connector_name:
        type: string
      connector_popular:
        type: string
      connector_status:
        type: string
      connector_type:
        type: string
    type: object
  es.Finding:
    properties:
      accountID:
        type: string
      controlID:
        type: string
      describedAt:
        type: integer
      id:
        type: string
      parentBenchmarkIDs:
        items:
          type: string
        type: array
      reportID:
        type: integer
      reportJobID:
        type: integer
      resourceID:
        type: string
      resourceLocation:
        type: string
      resourceName:
        type: string
      status:
        type: string
    type: object
  gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source:
    properties:
      id:
        type: string
      lastComplianceReportAt:
        type: string
      lastDescribeJobStatus:
        type: string
      lastDescribedAt:
        type: string
      type:
        type: string
    type: object
  gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source:
    properties:
      description:
        type: string
      email:
        type: string
      id:
        type: string
      onboardDate:
        type: string
      providerConnectionID:
        type: string
      providerConnectionName:
        type: string
      type:
        type: string
    type: object
host: dev-cluster.keibi.io
info:
  contact: {}
  title: Keibi Service API
  version: "1.0"
paths:
  /auth/api/v1/invite:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.InviteResponse'
      summary: Invites a user by sending them an email and registering invitation.
      tags:
      - auth
  /auth/api/v1/invite/invite_id:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Accepts users invitation and creates default (VIEW) role in invited
        workspace.
      tags:
      - auth
  /auth/api/v1/role/binding:
    put:
      description: RoleBinding defines the roles and actions a user can perform. There
        are currently three roles (ADMIN, EDITOR, VIEWER). User must exist before
        you can update its RoleBinding. If you want to add a role binding for a user
        given the email address, call invite first to get a user id. Then call this
        endpoint.
      parameters:
      - description: userId
        in: body
        name: userId
        required: true
        schema:
          type: string
      - description: role
        in: body
        name: role
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update RoleBinding for a user.
      tags:
      - auth
  /auth/api/v1/user/role/bindings:
    get:
      description: RoleBinding defines the roles and actions a user can perform. There
        are currently three roles (ADMIN, EDITOR, VIEWER).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.RoleBinding'
            type: array
      summary: Get RoleBindings for the calling user
      tags:
      - auth
  /auth/api/v1/workspace/role/bindings:
    get:
      description: RoleBinding defines the roles and actions a user can perform. There
        are currently three roles (ADMIN, EDITOR, VIEWER). The workspace path is based
        on the DNS such as (workspace1.app.keibi.io)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.WorkspaceRoleBinding'
            type: array
      summary: Get all the user RoleBindings for the given workspace.
      tags:
      - auth
  /benchmarks/compliancy/{provider}/top/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: Count
        in: query
        name: count
        required: true
        type: integer
      - description: Order
        enum:
        - asc
        - desc
        in: query
        name: order
        required: true
        type: string
      - description: Provider
        enum:
        - AWS
        - Azure
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.AccountCompliancyResponse'
            type: array
      summary: Return top accounts by benchmark compliancy
      tags:
      - provider_dashboard
  /benchmarks/compliancy/{provider}/top/services:
    get:
      consumes:
      - application/json
      parameters:
      - description: Count
        in: query
        name: count
        required: true
        type: integer
      - description: Order
        enum:
        - asc
        - desc
        in: query
        name: order
        required: true
        type: string
      - description: Provider
        enum:
        - AWS
        - Azure
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ServiceCompliancyResponse'
            type: array
      summary: Return top accounts by benchmark compliancy
      tags:
      - provider_dashboard
  /inventory/api/v1/accounts/resource/count:
    get:
      consumes:
      - application/json
      parameters:
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.AccountResourceCountResponse'
            type: array
      summary: Returns resource count of accounts
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks:
    get:
      consumes:
      - application/json
      description: In order to filter benchmarks by tags provide the tag key-value
        as query param
      parameters:
      - description: Provider
        enum:
        - AWS
        - Azure
        in: query
        name: provider
        type: string
      - description: Tags in key-value query param
        in: query
        name: tags
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Benchmark'
            type: array
      summary: Returns list of benchmarks
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmark_id}/source/{source_id}:
    delete:
      consumes:
      - application/json
      description: Delete benchmark assignment with source id and benchmark id
      parameters:
      - description: Benchmark ID
        in: path
        name: benchmark_id
        required: true
        type: string
      - description: Source ID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete benchmark assignment for inventory service
      tags:
      - benchmarks_assignment
    post:
      consumes:
      - application/json
      description: Returns benchmark assignment which insert
      parameters:
      - description: Benchmark ID
        in: path
        name: benchmark_id
        required: true
        type: string
      - description: Source ID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.BenchmarkAssignment'
      summary: Create benchmark assignment for inventory service
      tags:
      - benchmarks_assignment
  /inventory/api/v1/benchmarks/{benchmark_id}/sources:
    get:
      consumes:
      - application/json
      description: Returns all benchmark assigned sources with benchmark id
      parameters:
      - description: Benchmark ID
        in: path
        name: benchmark_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.BenchmarkAssignedSource'
            type: array
      summary: Get all benchmark assigned sources with benchmark id
      tags:
      - benchmarks_assignment
  /inventory/api/v1/benchmarks/{benchmarkId}/{createdAt}/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: string
      - description: CreatedAt
        in: path
        name: createdAt
        required: true
        type: string
      - description: Order
        enum:
        - asc
        - desc
        in: query
        name: order
        required: true
        type: string
      - description: Size
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.BenchmarkAccountComplianceResponse'
      summary: Returns list of accounts compliance scores ordered by compliance ratio
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/{createdAt}/accounts/compliance:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: string
      - description: CreatedAt
        in: path
        name: createdAt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.BenchmarkAccountComplianceResponse'
      summary: Returns no of compliant & non-compliant accounts
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/{sourceId}/compliance/trend:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: string
      - description: SourceID
        in: path
        name: sourceId
        required: true
        type: string
      - description: Time Window
        enum:
        - 24h
        - 1w
        - 3m
        - 1y
        - max
        in: query
        name: timeWindow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ComplianceTrendDataPoint'
            type: array
      summary: Returns trend of a benchmark compliance for specific account
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/policies:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: integer
      - description: Category Filter
        in: query
        name: category
        type: string
      - description: Subcategory Filter
        in: query
        name: subcategory
        type: string
      - description: Section Filter
        in: query
        name: section
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Policy'
            type: array
      summary: Returns list of policies of a given benchmark
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/result/findings:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: string
      - description: Category Filter
        in: query
        name: category
        type: string
      - description: Subcategory Filter
        in: query
        name: subcategory
        type: string
      - description: Section Filter
        in: query
        name: section
        type: string
      - description: Severity Filter
        in: query
        name: severity
        type: string
      - description: Status Filter
        enum:
        - passed
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ResultCompliancy'
            type: array
      summary: Returns compliancy of policies in result of benchmark
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/result/policies:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: string
      - description: Category Filter
        in: query
        name: category
        type: string
      - description: Subcategory Filter
        in: query
        name: subcategory
        type: string
      - description: Section Filter
        in: query
        name: section
        type: string
      - description: Severity Filter
        in: query
        name: severity
        type: string
      - description: Status Filter
        enum:
        - passed
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ResultPolicy'
            type: array
      summary: Returns policies of result of benchmark
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/result/policies/{policy_id}/findings:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/es.Finding'
            type: array
      summary: Returns findings of a policy in results of a benchmark
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/result/policies/{policy_id}/resources/summary:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ResultPolicyResourceSummary'
      summary: Returns summary of resources of a policy in results of a benchmark
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{benchmarkId}/result/summary:
    get:
      consumes:
      - application/json
      parameters:
      - description: BenchmarkID
        in: path
        name: benchmarkId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/compliance_report.SummaryStatus'
      summary: Returns summary of result of benchmark
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/{provider}/list:
    get:
      consumes:
      - application/json
      description: You should fetch the benchmark report times from /benchmarks/history/:year/:month/:day
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: SourceID
        in: query
        name: sourceId
        type: string
      - description: Provider
        enum:
        - AWS
        - Azure
        in: path
        name: provider
        required: true
        type: string
      - description: CreatedAt
        in: path
        name: createdAt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.BenchmarkScoreResponse'
            type: array
      summary: Returns all benchmark existed at the specified time
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/count:
    get:
      consumes:
      - application/json
      description: In order to filter benchmarks by tags provide the tag key-value
        as query param
      parameters:
      - description: Provider
        enum:
        - AWS
        - Azure
        in: query
        name: provider
        type: string
      - description: Tags in key-value query param
        in: query
        name: tags
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Benchmark'
            type: array
      summary: Returns count of benchmarks
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/history/list/{provider}/{createdAt}:
    get:
      consumes:
      - application/json
      description: You should fetch the benchmark report times from /benchmarks/history/:year/:month/:day
      parameters:
      - description: Provider
        enum:
        - AWS
        - Azure
        - All
        in: path
        name: provider
        required: true
        type: string
      - description: CreatedAt
        in: path
        name: createdAt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Benchmark'
            type: array
      summary: Returns all benchmark existed at the specified time
      tags:
      - benchmarks
  /inventory/api/v1/benchmarks/source/{source_id}:
    get:
      consumes:
      - application/json
      description: Returns all benchmark assignments with source id
      parameters:
      - description: Source ID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.BenchmarkAssignment'
            type: array
      summary: Get all benchmark assignments with source id
      tags:
      - benchmarks_assignment
  /inventory/api/v1/benchmarks/tags:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.GetBenchmarkTag'
            type: array
      summary: Returns list of benchmark tags
      tags:
      - benchmarks
  /inventory/api/v1/categories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Return list of categories
      tags:
      - inventory
  /inventory/api/v1/compliancy/trend:
    get:
      consumes:
      - application/json
      parameters:
      - description: SourceID
        in: query
        name: sourceId
        required: true
        type: string
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      - description: Time Window
        enum:
        - 24h
        - 1w
        - 3m
        - 1y
        - max
        in: query
        name: timeWindow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TrendDataPoint'
            type: array
      summary: Returns trend of compliancy for specific account
      tags:
      - benchmarks
  /inventory/api/v1/cost/top/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TopAccountCostResponse'
            type: array
      summary: Returns top n accounts of specified provider by cost
      tags:
      - cost
  /inventory/api/v1/cost/top/services:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      - description: SourceID
        in: query
        name: sourceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TopServiceCostResponse'
            type: array
      summary: Returns top n services of specified provider by cost
      tags:
      - cost
  /inventory/api/v1/insight/results:
    get:
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.ListInsightResultsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: List insight results for specified account
      tags:
      - insights
  /inventory/api/v1/locations/{provider}:
    get:
      description: Getting locations by provider
      parameters:
      - description: Provider
        enum:
        - aws
        - azure
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.LocationByProviderResponse'
            type: array
      summary: Get locations
      tags:
      - location
  /inventory/api/v1/metrics/categorized:
    get:
      consumes:
      - application/json
      parameters:
      - description: Provider
        in: query
        name: provider
        type: string
      - description: SourceID
        in: query
        name: sourceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CategorizedMetricsResponse'
      summary: Return categorized metrics, their value and their history
      tags:
      - inventory
  /inventory/api/v1/metrics/summary:
    get:
      consumes:
      - application/json
      parameters:
      - description: Provider
        in: query
        name: provider
        type: string
      - description: SourceID
        in: query
        name: sourceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.MetricsResponse'
            type: array
      summary: Return metrics, their value and their history
      tags:
      - inventory
  /inventory/api/v1/policies/count:
    get:
      consumes:
      - application/json
      parameters:
      - description: Provider
        enum:
        - AWS
        - Azure
        in: query
        name: provider
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Benchmark'
            type: array
      summary: Returns count of policies
      tags:
      - benchmarks
  /inventory/api/v1/query:
    get:
      description: Listing smart queries
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.ListQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.SmartQueryItem'
            type: array
      summary: List smart queries
      tags:
      - smart_query
  /inventory/api/v1/query/{queryId}:
    post:
      description: |-
        Run a specific smart query.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
      parameters:
      - description: QueryID
        in: path
        name: queryId
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RunQueryRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RunQueryResponse'
      summary: Run a specific smart query
      tags:
      - smart_query
  /inventory/api/v1/query/count:
    get:
      description: Counting smart queries
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.ListQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Count smart queries
      tags:
      - smart_query
  /inventory/api/v1/resource:
    post:
      description: Getting resource details by id and resource type
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourceRequest'
      produces:
      - application/json
      responses: {}
      summary: Get details of a Resource
      tags:
      - resource
  /inventory/api/v1/resources:
    post:
      consumes:
      - application/json
      description: |-
        Getting all cloud providers resources by filters.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
        If sort by is empty, result will be sorted by the first column in ascending order.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourcesRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      - description: Common filter
        enum:
        - "true"
        - "false"
        - all
        in: query
        name: common
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetResourcesResponse'
      summary: Get resources
      tags:
      - inventory
  /inventory/api/v1/resources/aws:
    post:
      consumes:
      - application/json
      description: |-
        Getting AWS resources by filters.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourcesRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      - description: Common filter
        enum:
        - "true"
        - "false"
        - all
        in: query
        name: common
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetAWSResourceResponse'
      summary: Get AWS resources
      tags:
      - inventory
  /inventory/api/v1/resources/azure:
    post:
      consumes:
      - application/json
      description: |-
        Getting Azure resources by filters.
        In order to get the results in CSV format, Accepts header must be filled with `text/csv` value.
        Note that csv output doesn't process pagination and returns first 5000 records.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetResourcesRequest'
      - description: Accept header
        enum:
        - application/json
        - text/csv
        in: header
        name: accept
        required: true
        type: string
      - description: Common filter
        enum:
        - "true"
        - "false"
        - all
        in: query
        name: common
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetAzureResourceResponse'
      summary: Get Azure resources
      tags:
      - inventory
  /inventory/api/v1/resources/categories:
    get:
      consumes:
      - application/json
      parameters:
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      - description: SourceID
        in: query
        name: sourceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.CategoriesResponse'
            type: array
      summary: Return resource categories and number of resources
      tags:
      - inventory
  /inventory/api/v1/resources/distribution:
    get:
      consumes:
      - application/json
      parameters:
      - description: SourceID
        in: query
        name: sourceId
        required: true
        type: string
      - description: Provider
        enum:
        - AWS
        - Azure
        - all
        in: query
        name: provider
        required: true
        type: string
      - description: Time Window
        enum:
        - 24h
        - 1w
        - 3m
        - 1y
        - max
        in: query
        name: timeWindow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
      summary: Returns distribution of resource for specific account
      tags:
      - benchmarks
  /inventory/api/v1/resources/filters:
    post:
      consumes:
      - application/json
      description: Getting resource filters by filters.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GetFiltersRequest'
      - description: Common filter
        enum:
        - "true"
        - "false"
        - all
        in: query
        name: common
        type: string
      produces:
      - application/json
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetFiltersResponse'
      summary: Get resource filters
      tags:
      - inventory
  /inventory/api/v1/resources/top/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TopAccountResponse'
            type: array
      summary: Returns top n accounts of specified provider by resource count
      tags:
      - benchmarks
  /inventory/api/v1/resources/top/growing/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      - description: TimeWindow
        enum:
        - 1d
        - 1w
        - 3m
        - 1y
        in: query
        name: timeWindow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TopAccountResponse'
            type: array
      summary: Returns top n accounts of specified provider by resource count
      tags:
      - benchmarks
  /inventory/api/v1/resources/top/regions:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: Provider
        in: query
        name: provider
        type: string
      - description: SourceId
        in: query
        name: sourceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.CategoriesResponse'
            type: array
      summary: Returns top n regions of specified provider by resource count
      tags:
      - inventory
  /inventory/api/v1/resources/top/services:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      - description: SourceID
        in: query
        name: sourceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TopServicesResponse'
            type: array
      summary: Returns top n services of specified provider by resource count
      tags:
      - benchmarks
  /inventory/api/v1/resources/trend:
    get:
      consumes:
      - application/json
      parameters:
      - description: SourceID
        in: query
        name: sourceId
        type: string
      - description: Provider
        in: query
        name: provider
        type: string
      - description: Time Window
        enum:
        - 24h
        - 1w
        - 3m
        - 1y
        - max
        in: query
        name: timeWindow
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TrendDataPoint'
            type: array
      summary: Returns trend of resource growth for specific account
      tags:
      - benchmarks
  /inventory/api/v1/services/distribution:
    get:
      consumes:
      - application/json
      parameters:
      - description: SourceID
        in: query
        name: sourceId
        required: true
        type: string
      - description: Provider
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ServiceDistributionItem'
            type: array
      summary: Returns distribution of services for specific account
      tags:
      - benchmarks
  /onboard/api/v1/connectors:
    get:
      description: Getting connectors
      parameters:
      - description: category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/connector.Connector'
            type: array
      summary: Get connectors
      tags:
      - onboard
  /onboard/api/v1/connectors/categories:
    get:
      description: Getting connector categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/connector.Category'
            type: array
      summary: Get connector categories
      tags:
      - onboard
  /onboard/api/v1/discover/aws/accounts:
    post:
      description: If the account is part of an organization and the account has premission
        to list the accounts, it will return all the accounts in that organization.
        Otherwise, it will return the single account these credentials belong to.
      parameters:
      - description: AccessKey
        in: body
        name: accessKey
        required: true
        schema:
          type: string
      - description: SecretKey
        in: body
        name: secretKey
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DiscoverAWSAccountsResponse'
            type: array
      summary: Returns the list of available AWS accounts given the credentials.
      tags:
      - onboard
  /onboard/api/v1/discover/azure/subscriptions:
    post:
      description: Returning the list of available Azure subscriptions.
      parameters:
      - description: TenantId
        in: body
        name: tenantId
        required: true
        schema:
          type: string
      - description: ClientId
        in: body
        name: clientId
        required: true
        schema:
          type: string
      - description: ClientSecret
        in: body
        name: clientSecret
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DiscoverAzureSubscriptionsResponse'
            type: array
      summary: Returns the list of available Azure subscriptions.
      tags:
      - onboard
  /onboard/api/v1/discover/azure/subscriptions/spn:
    post:
      description: Returning the list of available Azure subscriptions.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.DiscoverAzureSubscriptionsSPNRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DiscoverAzureSubscriptionsResponse'
            type: array
      summary: Returns the list of available Azure subscriptions.
      tags:
      - onboard
  /onboard/api/v1/providers:
    get:
      description: Getting cloud providers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Provider'
            type: array
      summary: Get providers
      tags:
      - onboard
  /onboard/api/v1/providers/types:
    get:
      description: Getting provider types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ProviderType'
            type: array
      summary: Get provider types
      tags:
      - onboard
  /onboard/api/v1/source/{sourceId}:
    delete:
      description: Deleting a single source either AWS / Azure.
      parameters:
      - description: SourceID
        in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete a single source
      tags:
      - onboard
    get:
      description: Returning single source either AWS / Azure.
      parameters:
      - description: SourceID
        in: path
        name: sourceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source'
      summary: Returns a single source
      tags:
      - onboard
  /onboard/api/v1/source/{sourceId}/credentials:
    post:
      parameters:
      - description: Source ID
        in: query
        name: sourceId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get source credential
      tags:
      - onboard
    put:
      parameters:
      - description: Source ID
        in: query
        name: sourceId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Put source credential
      tags:
      - onboard
  /onboard/api/v1/source/aws:
    post:
      description: Creating AWS source
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.SourceConfigAWS'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateSourceResponse'
      summary: Create AWS source
      tags:
      - onboard
  /onboard/api/v1/source/azure:
    post:
      description: Creating Azure source
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.SourceConfigAzure'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateSourceResponse'
      summary: Create Azure source
      tags:
      - onboard
  /onboard/api/v1/source/azure/spn:
    post:
      description: Creating Azure source with SPN
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.SourceConfigAzure'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateSourceResponse'
      summary: Create Azure source with SPN
      tags:
      - onboard
  /onboard/api/v1/sources:
    get:
      description: Returning a list of sources including both AWS and Azure unless
        filtered by Type.
      parameters:
      - description: Type
        enum:
        - aws
        - azure
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source'
            type: array
      summary: Returns a list of sources
      tags:
      - onboard
  /onboard/api/v1/sources/count:
    get:
      description: Returning a count of sources including both AWS and Azure unless
        filtered by Type.
      parameters:
      - description: Type
        enum:
        - aws
        - azure
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Returns a count of sources
      tags:
      - onboard
  /onboard/api/v1/spn/{spnId}:
    delete:
      parameters:
      - description: SPN ID
        in: query
        name: spnId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete SPN credential
      tags:
      - onboard
    post:
      parameters:
      - description: SPN ID
        in: query
        name: spnId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get SPN credential
      tags:
      - onboard
    put:
      parameters:
      - description: SPN ID
        in: query
        name: spnId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Put SPN credential
      tags:
      - onboard
  /onboard/api/v1/spn/azure:
    post:
      description: Creating Azure SPN
      parameters:
      - description: name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.SourceConfigAzure'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateSPNResponse'
      summary: Create Azure SPN
      tags:
      - onboard
  /onboard/api/v1/spn/list:
    get:
      produces:
      - application/json
      responses: {}
      summary: List SPN credentials
      tags:
      - onboard
  /schedule/api/v1/compliance/report/last/completed:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Get last completed compliance report
      tags:
      - schedule
  /schedule/api/v1/insight:
    get:
      description: Listing insights
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.ListInsightsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Insight'
            type: array
      summary: List insights
      tags:
      - insights
    put:
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateInsightRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Create a new insight
      tags:
      - insights
  /schedule/api/v1/insight/{id}:
    delete:
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete an insight
      tags:
      - insights
  /schedule/api/v1/resource_type/{provider}:
    get:
      description: get resource type by provider
      parameters:
      - description: Provider
        enum:
        - aws
        - azure
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ResourceTypeDetail'
            type: array
      summary: get resource type by provider
      tags:
      - schedule
  /schedule/api/v1/sources:
    get:
      description: Getting all of Keibi sources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source'
            type: array
      summary: List Sources
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}:
    get:
      description: Getting Keibi source by id
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source'
      summary: Get Source by id
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/compliance:
    get:
      description: List source compliance reports
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      - description: From Time (TimeRange)
        in: query
        name: from
        type: integer
      - description: To Time (TimeRange)
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ComplianceReport'
            type: array
      summary: List source compliance reports
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/compliance/refresh:
    post:
      description: Run compliance report jobs
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Run compliance report jobs
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/describe:
    get:
      description: List source describe jobs
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.DescribeSource'
            type: array
      summary: List source describe jobs
      tags:
      - schedule
  /schedule/api/v1/sources/{source_id}/jobs/describe/refresh:
    post:
      description: Run describe jobs
      parameters:
      - description: SourceID
        in: path
        name: source_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Run describe jobs
      tags:
      - schedule
  /workspace/api/v1/workspace:
    post:
      consumes:
      - application/json
      description: Returns workspace created
      parameters:
      - description: Create workspace request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateWorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.CreateWorkspaceResponse'
      summary: Create workspace for workspace service
      tags:
      - workspace
  /workspace/api/v1/workspace/:workspace_id:
    delete:
      consumes:
      - application/json
      description: Delete workspace with workspace id
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete workspace for workspace service
      tags:
      - workspace
  /workspace/api/v1/workspace/{workspace_id}/owner:
    post:
      consumes:
      - application/json
      parameters:
      - description: Change ownership request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.ChangeWorkspaceOwnershipRequest'
      produces:
      - application/json
      responses: {}
      summary: Change ownership of workspace
      tags:
      - workspace
  /workspace/api/v1/workspaces:
    get:
      consumes:
      - application/json
      description: Returns all workspaces with owner id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/api.WorkspaceResponse'
              type: array
            type: array
      summary: List all workspaces with owner id
      tags:
      - workspace
  /workspace/api/v1/workspaces/limits/{workspace_name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Workspace Name
        in: path
        name: workspace_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.WorkspaceLimits'
            type: array
      summary: Get workspace limits
      tags:
      - workspace
schemes:
- https
swagger: "2.0"
