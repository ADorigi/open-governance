{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Keibi Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "dev-cluster.keibi.io",
    "paths": {
        "/auth/api/v1/role/binding": {
            "get": {
                "description": "RoleBinding defines the roles and actions a user can perform. There are currently three roles (ADMIN, EDITOR, VIEWER).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get RoleBinding for a single user.",
                "parameters": [
                    {
                        "description": "userId",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetRoleBindingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/api/v1/role/bindings": {
            "get": {
                "description": "RoleBinding defines the roles and actions a user can perform. There are currently three roles (ADMIN, EDITOR, VIEWER).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get RoleBinding for all users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RoleBinding"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "RoleBinding defines the roles and actions a user can perform. There are currently three roles (ADMIN, EDITOR, VIEWER). User must exist before you can update its RoleBinding",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update RoleBinding for a user.",
                "parameters": [
                    {
                        "description": "userId",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/benchmarks/compliancy/{provider}/top/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provider_dashboard"
                ],
                "summary": "Return top accounts by benchmark compliancy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "AWS",
                            "Azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AccountCompliancyResponse"
                            }
                        }
                    }
                }
            }
        },
        "/benchmarks/compliancy/{provider}/top/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provider_dashboard"
                ],
                "summary": "Return top accounts by benchmark compliancy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "AWS",
                            "Azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ServiceCompliancyResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/accounts/resource/count": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns resource count of accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopAccountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks": {
            "get": {
                "description": "In order to filter benchmarks by tags provide the tag key-value as query param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns list of benchmarks",
                "parameters": [
                    {
                        "enum": [
                            "AWS",
                            "Azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tags in key-value query param",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Benchmark"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/count": {
            "get": {
                "description": "In order to filter benchmarks by tags provide the tag key-value as query param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns count of benchmarks",
                "parameters": [
                    {
                        "enum": [
                            "AWS",
                            "Azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tags in key-value query param",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Benchmark"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/history/list/{provider}/{createdAt}": {
            "get": {
                "description": "You should fetch the benchmark report times from /benchmarks/history/:year/:month/:day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns all benchmark existed at the specified time",
                "parameters": [
                    {
                        "enum": [
                            "AWS",
                            "Azure",
                            "All"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CreatedAt",
                        "name": "createdAt",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Benchmark"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/source/{source_id}": {
            "get": {
                "description": "Returns all benchmark assignments with source id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get all benchmark assignments with source id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BenchmarkAssignment"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/tags": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns list of benchmark tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.GetBenchmarkTag"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns details of a given benchmark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BenchmarkID",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetBenchmarkDetailsResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}/policies": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns list of policies of a given benchmark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BenchmarkID",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category Filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Subcategory Filter",
                        "name": "subcategory",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Section Filter",
                        "name": "section",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Policy"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}/{createdAt}/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns list of accounts compliance scores ordered by compliance ratio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BenchmarkID",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CreatedAt",
                        "name": "createdAt",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BenchmarkAccountComplianceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}/{createdAt}/accounts/compliance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns no of compliant \u0026 non-compliant accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BenchmarkID",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CreatedAt",
                        "name": "createdAt",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BenchmarkAccountComplianceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}/{sourceId}/compliance/trend": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns trend of a benchmark compliance for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BenchmarkID",
                        "name": "benchmarkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ComplianceTrendDataPoint"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}/{sourceId}/result": {
            "get": {
                "description": "Returns summary of benchmark, category, subcategory or section's result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns summary of benchmark result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Benchmark/Category/Subcategory/Section",
                        "name": "benchmarkId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/compliance_report.ReportGroupObj"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmarkId}/{sourceId}/result/policies": {
            "get": {
                "description": "Returns policy results of specific benchmark",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns policy results of specific benchmark",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of Benchmark/Category/Subcategory/Section",
                        "name": "benchmarkId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category Filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Subcategory Filter",
                        "name": "subcategory",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Section Filter",
                        "name": "section",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Severity Filter",
                        "name": "severity",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "passed",
                            "failed"
                        ],
                        "type": "string",
                        "description": "Status Filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PolicyResult"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmark_id}/source/{source_id}": {
            "post": {
                "description": "Returns benchmark assignment which insert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Create benchmark assignment for inventory service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BenchmarkAssignment"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete benchmark assignment with source id and benchmark id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Delete benchmark assignment for inventory service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{benchmark_id}/sources": {
            "get": {
                "description": "Returns all benchmark assigned sources with benchmark id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get all benchmark assigned sources with benchmark id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BenchmarkAssignedSource"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/benchmarks/{provider}/list": {
            "get": {
                "description": "You should fetch the benchmark report times from /benchmarks/history/:year/:month/:day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns all benchmark existed at the specified time",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "AWS",
                            "Azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CreatedAt",
                        "name": "createdAt",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BenchmarkScoreResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/compliancy/trend": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns trend of compliancy for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TrendDataPoint"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/locations/{provider}": {
            "get": {
                "description": "Getting locations by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Get locations",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.LocationByProviderResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/policies/count": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns count of policies",
                "parameters": [
                    {
                        "enum": [
                            "AWS",
                            "Azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Benchmark"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query": {
            "get": {
                "description": "Listing smart queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "List smart queries",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ListQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.SmartQueryItem"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/count": {
            "get": {
                "description": "Counting smart queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "Count smart queries",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ListQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/{queryId}": {
            "post": {
                "description": "Run a specific smart query.\nIn order to get the results in CSV format, Accepts header must be filled with `text/csv` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "Run a specific smart query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QueryID",
                        "name": "queryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RunQueryRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RunQueryResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/reports/compliance/{source_id}": {
            "get": {
                "description": "Returns list of compliance report groups of specified job id (if not specified, last one will be returned)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance_report"
                ],
                "summary": "Returns list of compliance report groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report Job ID",
                        "name": "report_id",
                        "in": "path"
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetComplianceReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/compliance_report.Report"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/reports/compliance/{source_id}/{report_id}": {
            "get": {
                "description": "Returns list of compliance report groups of specified job id (if not specified, last one will be returned)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance_report"
                ],
                "summary": "Returns list of compliance report groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report Job ID",
                        "name": "report_id",
                        "in": "path"
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetComplianceReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/compliance_report.Report"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resource": {
            "post": {
                "description": "Getting resource details by id and resource type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get details of a Resource",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourceRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/inventory/api/v1/resources": {
            "post": {
                "description": "Getting all cloud providers resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with `text/csv` value.\nNote that csv output doesn't process pagination and returns first 5000 records.\nIf sort by is empty, result will be sorted by the first column in ascending order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/aws": {
            "post": {
                "description": "Getting AWS resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with `text/csv` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get AWS resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAWSResourceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/azure": {
            "post": {
                "description": "Getting Azure resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with `text/csv` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get Azure resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAzureResourceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return resource categories and number of resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopAccountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/distribution": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns distribution of resource for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/top/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns top n accounts of specified provider by resource count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopAccountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/top/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns top n services of specified provider by resource count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopServicesResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/trend": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns trend of resource growth for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TrendDataPoint"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/services/distribution": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns distribution of services for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ServiceDistributionItem"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/aws/accounts": {
            "post": {
                "description": "If the account is part of an organization and the account has premission to list the accounts, it will return all the accounts in that organization. Otherwise, it will return the single account these credentials belong to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available AWS accounts given the credentials.",
                "parameters": [
                    {
                        "description": "AccessKey",
                        "name": "accessKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "SecretKey",
                        "name": "secretKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAWSAccountsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/azure/subscriptions": {
            "post": {
                "description": "Returning the list of available Azure subscriptions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available Azure subscriptions.",
                "parameters": [
                    {
                        "description": "TenantId",
                        "name": "tenantId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ClientId",
                        "name": "clientId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ClientSecret",
                        "name": "clientSecret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAzureSubscriptionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/providers": {
            "get": {
                "description": "Getting cloud providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/providers/types": {
            "get": {
                "description": "Getting provider types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get provider types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ProviderType"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/aws": {
            "post": {
                "description": "Creating AWS source",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create AWS source",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAWS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/azure": {
            "post": {
                "description": "Creating Azure source",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create Azure source",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAzure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/{sourceId}": {
            "get": {
                "description": "Returning single source either AWS / Azure.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting a single source either AWS / Azure.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Delete a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/onboard/api/v1/sources": {
            "get": {
                "description": "Returning a list of sources including both AWS and Azure unless filtered by Type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a list of sources",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/sources/count": {
            "get": {
                "description": "Returning a count of sources including both AWS and Azure unless filtered by Type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a count of sources",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/{sourceId}/credentials": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Put source credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/api/v1/resource_type/{provider}": {
            "get": {
                "description": "get resource type by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "get resource type by provider",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources": {
            "get": {
                "description": "Getting all of Keibi sources",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List Sources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}": {
            "get": {
                "description": "Getting Keibi source by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get Source by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source"
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/compliance": {
            "get": {
                "description": "List source compliance reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List source compliance reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "From Time (TimeRange)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "To Time (TimeRange)",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ComplianceReport"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/compliance/refresh": {
            "post": {
                "description": "Run compliance report jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Run compliance report jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/describe": {
            "get": {
                "description": "List source describe jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List source describe jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DescribeSource"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/describe/refresh": {
            "post": {
                "description": "Run describe jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Run describe jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.AWSResource": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                }
            }
        },
        "api.AccountCompliancyResponse": {
            "type": "object",
            "properties": {
                "sourceID": {
                    "type": "string"
                },
                "totalCompliant": {
                    "type": "integer"
                },
                "totalResources": {
                    "type": "integer"
                }
            }
        },
        "api.AllResource": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                },
                "sourceID": {
                    "type": "string"
                }
            }
        },
        "api.AzureResource": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resourceGroup": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                },
                "subscriptionID": {
                    "type": "string"
                }
            }
        },
        "api.Benchmark": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.BenchmarkAccountComplianceResponse": {
            "type": "object",
            "properties": {
                "totalCompliantAccounts": {
                    "type": "integer"
                },
                "totalNonCompliantAccounts": {
                    "type": "integer"
                }
            }
        },
        "api.BenchmarkAssignedSource": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "integer"
                },
                "sourceId": {
                    "type": "string"
                }
            }
        },
        "api.BenchmarkAssignment": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "integer"
                },
                "benchmarkId": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "string"
                }
            }
        },
        "api.BenchmarkScoreResponse": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "string"
                },
                "nonCompliantCount": {
                    "type": "integer"
                }
            }
        },
        "api.ComplianceReport": {
            "type": "object",
            "properties": {
                "failureMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reportCreatedAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.ComplianceReportFilters": {
            "type": "object",
            "properties": {
                "groupID": {
                    "description": "benchmark id or control id",
                    "type": "string"
                },
                "timeRange": {
                    "$ref": "#/definitions/api.TimeRangeFilter"
                }
            }
        },
        "api.ComplianceTrendDataPoint": {
            "type": "object",
            "properties": {
                "compliant": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "totalResources": {
                    "type": "integer"
                }
            }
        },
        "api.CreateSourceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.DescribeResource": {
            "type": "object",
            "properties": {
                "failureMessage": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DescribeSource": {
            "type": "object",
            "properties": {
                "describeResourceJobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DescribeResource"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAWSAccountsResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "description": "Nil if not part of an AWS organization",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAzureSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.Filters": {
            "description": "if you provide two values for same filter OR operation would be used if you provide value for two filters AND operation would be used",
            "type": "object",
            "properties": {
                "location": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceType": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceID": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GetAWSResourceResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AWSResource"
                    }
                }
            }
        },
        "api.GetAzureResourceResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AzureResource"
                    }
                }
            }
        },
        "api.GetBenchmarkDetailsResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GetBenchmarkTag": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.GetComplianceReportRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "filters": {
                    "$ref": "#/definitions/api.ComplianceReportFilters"
                },
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "reportType": {
                    "type": "string",
                    "enum": [
                        "benchmark",
                        "control",
                        "result"
                    ]
                }
            }
        },
        "api.GetResourceRequest": {
            "type": "object",
            "required": [
                "ID",
                "resourceType"
            ],
            "properties": {
                "ID": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "api.GetResourcesRequest": {
            "type": "object",
            "required": [
                "filterNots",
                "filters",
                "page"
            ],
            "properties": {
                "filterNots": {
                    "description": "search filters",
                    "$ref": "#/definitions/api.Filters"
                },
                "filters": {
                    "description": "search filters",
                    "$ref": "#/definitions/api.Filters"
                },
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "query": {
                    "description": "search query",
                    "type": "string"
                },
                "sorts": {
                    "description": "NOTE: we don't support multi-field sort for now, if sort is empty, results would be sorted by first column",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ResourceSortItem"
                    }
                }
            }
        },
        "api.GetResourcesResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AllResource"
                    }
                }
            }
        },
        "api.GetRoleBindingResponse": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "api.ListQueryRequest": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "providerFilter": {
                    "type": "string"
                },
                "titleFilter": {
                    "type": "string"
                }
            }
        },
        "api.LocationByProviderResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Page": {
            "type": "object",
            "required": [
                "size"
            ],
            "properties": {
                "nextMarker": {
                    "description": "fill it with empty for the first request",
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.Policy": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "commandLineRemedation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "manualRemedation": {
                    "type": "string"
                },
                "manualVerification": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "queryToRun": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "subcategory": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.PolicyResult": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "compliantResources": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "integer"
                },
                "describedAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "passed",
                        "failed"
                    ]
                },
                "subcategory": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "totalResources": {
                    "type": "integer"
                }
            }
        },
        "api.Provider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ProviderType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "coming_soon",
                        "disabled"
                    ]
                },
                "typeName": {
                    "type": "string"
                }
            }
        },
        "api.ResourceSortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "resource_id",
                        "name",
                        "source_type",
                        "resource_type",
                        "resource_group",
                        "location",
                        "source_id"
                    ]
                }
            }
        },
        "api.RoleBinding": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "api.RunQueryRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "sorts": {
                    "description": "NOTE: we don't support multi-field sort for now, if sort is empty, results would be sorted by first column",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SmartQuerySortItem"
                    }
                }
            }
        },
        "api.RunQueryResponse": {
            "type": "object",
            "properties": {
                "headers": {
                    "description": "column names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "result": {
                    "description": "result of query. in order to access a specific cell please use Result[Row][Column]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                }
            }
        },
        "api.ServiceCompliancyResponse": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "type": "string"
                },
                "totalCompliant": {
                    "type": "integer"
                },
                "totalResources": {
                    "type": "integer"
                }
            }
        },
        "api.ServiceDistributionItem": {
            "type": "object",
            "properties": {
                "distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "api.SmartQueryItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.SmartQuerySortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "description": "fill this with column name",
                    "type": "string"
                }
            }
        },
        "api.SourceConfigAWS": {
            "type": "object",
            "required": [
                "accessKey",
                "accountId",
                "secretKey"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secretKey": {
                    "type": "string"
                }
            }
        },
        "api.SourceConfigAzure": {
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "api.TimeRangeFilter": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "from epoch millisecond",
                    "type": "integer"
                },
                "to": {
                    "description": "from epoch millisecond",
                    "type": "integer"
                }
            }
        },
        "api.TopAccountResponse": {
            "type": "object",
            "properties": {
                "resourceCount": {
                    "type": "integer"
                },
                "sourceID": {
                    "type": "string"
                }
            }
        },
        "api.TopServicesResponse": {
            "type": "object",
            "properties": {
                "resourceCount": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "api.TrendDataPoint": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "compliance_report.Dimension": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "compliance_report.Report": {
            "type": "object",
            "properties": {
                "describedAt": {
                    "type": "integer"
                },
                "group": {
                    "$ref": "#/definitions/compliance_report.ReportGroupObj"
                },
                "provider": {
                    "type": "string"
                },
                "reportJobID": {
                    "type": "integer"
                },
                "result": {
                    "$ref": "#/definitions/compliance_report.ReportResultObj"
                },
                "sourceID": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "compliance_report.ReportGroupObj": {
            "type": "object",
            "properties": {
                "controlIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "groupIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "benchmark id / control id",
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "parentGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/compliance_report.Summary"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "compliance_report.ReportResultObj": {
            "type": "object",
            "properties": {
                "controlId": {
                    "type": "string"
                },
                "parentGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "$ref": "#/definitions/compliance_report.Result"
                }
            }
        },
        "compliance_report.Result": {
            "type": "object",
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/compliance_report.Dimension"
                    }
                },
                "reason": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ok",
                        "info",
                        "skip",
                        "alarm",
                        "error"
                    ]
                }
            }
        },
        "compliance_report.Summary": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/compliance_report.SummaryStatus"
                }
            }
        },
        "compliance_report.SummaryStatus": {
            "type": "object",
            "properties": {
                "alarm": {
                    "type": "integer"
                },
                "error": {
                    "type": "integer"
                },
                "info": {
                    "type": "integer"
                },
                "ok": {
                    "type": "integer"
                },
                "skip": {
                    "type": "integer"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lastComplianceReportAt": {
                    "type": "string"
                },
                "lastDescribedAt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "onboardDate": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}