// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/inventory/api/v1/locations/{provider}": {
            "get": {
                "description": "Getting locations by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Get locations",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.LocationByProviderResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query": {
            "get": {
                "description": "Listing smart queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "List smart queries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.SmartQueryItem"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/{queryId}": {
            "post": {
                "description": "Run a specific smart query.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "Run a specific smart query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QueryID",
                        "name": "queryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RunQueryRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RunQueryResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resource": {
            "post": {
                "description": "Getting resource details by id and resource type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get details of a Resource",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourceRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/inventory/api/v1/resources": {
            "post": {
                "description": "Getting all cloud providers resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.\nIf sort by is empty, result will be sorted by the first column in ascending order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/aws": {
            "post": {
                "description": "Getting AWS resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get AWS resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAWSResourceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/azure": {
            "post": {
                "description": "Getting Azure resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get Azure resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAzureResourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/aws": {
            "post": {
                "description": "Creating AWS source",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create AWS source",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAWS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/azure": {
            "post": {
                "description": "Creating Azure source",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create Azure source",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAzure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/aws/accounts": {
            "get": {
                "description": "If the account is part of an organization and the account has premission to list the accounts, it will return all the accounts in that organization. Otherwise, it will return the single account these credentials belong to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available AWS accounts given the credentials.",
                "parameters": [
                    {
                        "description": "AccessKey",
                        "name": "accessKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "SecretKey",
                        "name": "secretKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAWSAccountsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/azure/subscriptions": {
            "get": {
                "description": "Returning the list of available Azure subscriptions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available Azure subscriptions.",
                "parameters": [
                    {
                        "description": "TenantId",
                        "name": "tenantId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ClientId",
                        "name": "clientId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ClientSecret",
                        "name": "clientSecret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAzureSubscriptionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/providers": {
            "get": {
                "description": "Getting cloud providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/sources": {
            "get": {
                "description": "Returning a list of sources including both AWS and Azure unless filtered by Type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a list of sources",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/{sourceId}": {
            "get": {
                "description": "Returning single source either AWS / Azure.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting a single source either AWS / Azure.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Delete a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/reports/compliance/{source_id}": {
            "get": {
                "description": "Returns list of compliance report groups of specified job id (if not specified, last one will be returned)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance_report"
                ],
                "summary": "Returns list of compliance report groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report Job ID",
                        "name": "report_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetComplianceReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/compliance_report.Report"
                            }
                        }
                    }
                }
            }
        },
        "/reports/compliance/{source_id}/{report_id}": {
            "get": {
                "description": "Returns list of compliance report groups of specified job id (if not specified, last one will be returned)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance_report"
                ],
                "summary": "Returns list of compliance report groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Report Job ID",
                        "name": "report_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetComplianceReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/compliance_report.Report"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/resource_type/{provider}": {
            "get": {
                "description": "get resource type by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "get resource type by provider",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources": {
            "get": {
                "description": "Getting all of Keibi sources",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List Sources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/compliance": {
            "get": {
                "description": "List source compliance reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List source compliance reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "From Time (TimeRange)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "To Time (TimeRange)",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ComplianceReport"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/compliance/refresh": {
            "post": {
                "description": "Run compliance report jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Run compliance report jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/describe": {
            "get": {
                "description": "List source describe jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List source describe jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DescribeSource"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/describe/refresh": {
            "post": {
                "description": "Run describe jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Run describe jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/api/v1/sources/{source_id}/policy/{policy_id}": {
            "get": {
                "description": "Assign source to policy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Assign source to policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.AWSResource": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "steampipe_columns": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.AllResource": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "sourceID": {
                    "type": "string"
                },
                "steampipe_columns": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.AzureResource": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resourceGroup": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "steampipe_columns": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "subscriptionID": {
                    "type": "string"
                }
            }
        },
        "api.ComplianceReport": {
            "type": "object",
            "properties": {
                "failureMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.ComplianceReportFilters": {
            "type": "object",
            "properties": {
                "groupID": {
                    "description": "benchmark id or control id",
                    "type": "string"
                },
                "timeRange": {
                    "$ref": "#/definitions/api.TimeRangeFilter"
                }
            }
        },
        "api.CreateSourceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.DescribeResource": {
            "type": "object",
            "properties": {
                "failureMessage": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DescribeSource": {
            "type": "object",
            "properties": {
                "describeResourceJobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DescribeResource"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAWSAccountsResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "description": "Nil if not part of an AWS organization",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAzureSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                }
            }
        },
        "api.Filters": {
            "description": "if you provide two values for same filter OR operation would be used if you provide value for two filters AND operation would be used",
            "type": "object",
            "properties": {
                "keibiSource": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceType": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GetAWSResourceResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AWSResource"
                    }
                }
            }
        },
        "api.GetAzureResourceResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AzureResource"
                    }
                }
            }
        },
        "api.GetComplianceReportRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/api.ComplianceReportFilters"
                },
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "reportType": {
                    "type": "string",
                    "enum": [
                        "benchmark",
                        "control",
                        "result"
                    ]
                }
            }
        },
        "api.GetResourceRequest": {
            "type": "object",
            "required": [
                "ID",
                "resourceType"
            ],
            "properties": {
                "ID": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "api.GetResourcesRequest": {
            "type": "object",
            "required": [
                "filters"
            ],
            "properties": {
                "filters": {
                    "description": "search filters",
                    "$ref": "#/definitions/api.Filters"
                },
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "query": {
                    "description": "search query",
                    "type": "string"
                },
                "sorts": {
                    "description": "NOTE: we don't support multi-field sort for now, if sort is empty, results would be sorted by first column",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ResourceSortItem"
                    }
                }
            }
        },
        "api.GetResourcesResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AllResource"
                    }
                }
            }
        },
        "api.LocationByProviderResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Page": {
            "type": "object",
            "properties": {
                "nextMarker": {
                    "description": "fill it with empty for the first request",
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.Provider": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ResourceSortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "resource_id",
                        "name",
                        "source_type",
                        "resource_type",
                        "resource_group",
                        "location",
                        "source_id"
                    ]
                }
            }
        },
        "api.RunQueryRequest": {
            "type": "object",
            "properties": {
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "sorts": {
                    "description": "NOTE: we don't support multi-field sort for now, if sort is empty, results would be sorted by first column",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SmartQuerySortItem"
                    }
                }
            }
        },
        "api.RunQueryResponse": {
            "type": "object",
            "properties": {
                "headers": {
                    "description": "column names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page": {
                    "$ref": "#/definitions/api.Page"
                },
                "result": {
                    "description": "result of query. in order to access a specific cell please use Result[Row][Column]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                }
            }
        },
        "api.SmartQueryItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.SmartQuerySortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "description": "fill this with column name",
                    "type": "string"
                }
            }
        },
        "api.SourceConfigAWS": {
            "type": "object",
            "required": [
                "accessKey",
                "accountId",
                "secretKey"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secretKey": {
                    "type": "string"
                }
            }
        },
        "api.SourceConfigAzure": {
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "api.TimeRangeFilter": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "from epoch millisecond",
                    "type": "integer"
                },
                "to": {
                    "description": "from epoch millisecond",
                    "type": "integer"
                }
            }
        },
        "compliance_report.Dimension": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "compliance_report.Report": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/compliance_report.ReportGroupObj"
                },
                "reportJobID": {
                    "type": "integer"
                },
                "result": {
                    "$ref": "#/definitions/compliance_report.ReportResultObj"
                },
                "sourceID": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "compliance_report.ReportGroupObj": {
            "type": "object",
            "properties": {
                "controlIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "groupIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "benchmark id / control id",
                    "type": "string"
                },
                "parentGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/compliance_report.Summary"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "compliance_report.ReportResultObj": {
            "type": "object",
            "properties": {
                "controlId": {
                    "type": "string"
                },
                "parentGroupIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "$ref": "#/definitions/compliance_report.Result"
                }
            }
        },
        "compliance_report.Result": {
            "type": "object",
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/compliance_report.Dimension"
                    }
                },
                "reason": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "compliance_report.Summary": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/compliance_report.SummaryStatus"
                }
            }
        },
        "compliance_report.SummaryStatus": {
            "type": "object",
            "properties": {
                "alarm": {
                    "type": "integer"
                },
                "error": {
                    "type": "integer"
                },
                "info": {
                    "type": "integer"
                },
                "ok": {
                    "type": "integer"
                },
                "skip": {
                    "type": "integer"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lastComplianceReportAt": {
                    "type": "string"
                },
                "lastDescribedAt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "dev-cluster.keibi.io",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "Keibi Service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
