// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/api/v1/invite": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Invites a user by sending them an email and registering invitation.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.InviteResponse"
                        }
                    }
                }
            }
        },
        "/auth/api/v1/invite/invite_id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Accepts users invitation and creates default (VIEW) role in invited workspace.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v1/invites": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "lists all invites",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.InviteItem"
                            }
                        }
                    }
                }
            }
        },
        "/auth/api/v1/role/binding": {
            "put": {
                "description": "RoleBinding defines the roles and actions a user can perform. There are currently three roles (ADMIN, EDITOR, VIEWER). User must exist before you can update its RoleBinding. If you want to add a role binding for a user given the email address, call invite first to get a user id. Then call this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update RoleBinding for a user.",
                "parameters": [
                    {
                        "description": "userId",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/api/v1/user/role/bindings": {
            "get": {
                "description": "RoleBinding defines the roles and actions a user can perform. There are currently three roles (ADMIN, EDITOR, VIEWER).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get RoleBindings for the calling user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RoleBinding"
                            }
                        }
                    }
                }
            }
        },
        "/auth/api/v1/workspace/role/bindings": {
            "get": {
                "description": "RoleBinding defines the roles and actions a user can perform. There are currently three roles (ADMIN, EDITOR, VIEWER). The workspace path is based on the DNS such as (workspace1.app.keibi.io)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get all the user RoleBindings for the given workspace.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.WorkspaceRoleBinding"
                            }
                        }
                    }
                }
            }
        },
        "/benchmarks/{benchmark_id}/insight": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns insight of a specific benchmark",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BenchmarkID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetBenchmarkInsightResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/alarms/top": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns all findings with respect to filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetTopFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetTopFieldResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmark/:benchmark_id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Benchmark"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmark/:benchmark_id/summary": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ComplianceResultSummary"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/source/{source_id}": {
            "get": {
                "description": "Returns all benchmark assignments with source id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get all benchmark assignments with source id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BenchmarkAssignment"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/summary": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetBenchmarksSummaryResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/source/{source_id}": {
            "post": {
                "description": "Returns benchmark assignment which insert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Create benchmark assignment for inventory service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BenchmarkAssignment"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete benchmark assignment with source id and benchmark id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Delete benchmark assignment for inventory service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/compliance/api/v1/benchmarks/{benchmark_id}/sources": {
            "get": {
                "description": "Returns all benchmark assigned sources with benchmark id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks_assignment"
                ],
                "summary": "Get all benchmark assigned sources with benchmark id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Benchmark ID",
                        "name": "benchmark_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BenchmarkAssignedSource"
                            }
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/findings": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns all findings with respect to filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/findings/filters": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns all findings with respect to filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingsFiltersResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/findings/metrics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns findings metrics",
                "parameters": [
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingsMetricsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/findings/top": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns all findings with respect to filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetTopFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetTopFieldResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/findings/{finding_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Returns details of a single finding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FindingID",
                        "name": "finding_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingDetailsResponse"
                        }
                    }
                }
            }
        },
        "/compliance/api/v1/policy/summary/{benchmark_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "compliance"
                ],
                "summary": "Get benchmark summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BenchmarkID",
                        "name": "benchmarkID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetFindingsResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/accounts/resource/count": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns resource count of accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AccountResourceCountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return list of categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/cost/top/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cost"
                ],
                "summary": "Returns top n accounts of specified provider by cost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopAccountCostResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/cost/top/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cost"
                ],
                "summary": "Returns top n services of specified provider by cost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopServiceCostResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/insight/results": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "insights"
                ],
                "summary": "List insight results for specified account",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ListInsightResultsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/inventory/api/v1/locations/{provider}": {
            "get": {
                "description": "Getting locations by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Get locations",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.LocationByProviderResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/metrics/categorized": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return categorized metrics, their value and their history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CategorizedMetricsResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/metrics/summary": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return metrics, their value and their history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.MetricsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query": {
            "get": {
                "description": "Listing smart queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "List smart queries",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ListQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.SmartQueryItem"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/count": {
            "get": {
                "description": "Counting smart queries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "Count smart queries",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ListQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/query/{queryId}": {
            "post": {
                "description": "Run a specific smart query.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "smart_query"
                ],
                "summary": "Run a specific smart query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QueryID",
                        "name": "queryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RunQueryRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RunQueryResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resource": {
            "post": {
                "description": "Getting resource details by id and resource type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get details of a Resource",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourceRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/inventory/api/v1/resources": {
            "post": {
                "description": "Getting all cloud providers resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.\nIf sort by is empty, result will be sorted by the first column in ascending order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ],
                        "type": "string",
                        "description": "Common filter",
                        "name": "common",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/aws": {
            "post": {
                "description": "Getting AWS resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get AWS resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ],
                        "type": "string",
                        "description": "Common filter",
                        "name": "common",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAWSResourceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/azure": {
            "post": {
                "description": "Getting Azure resources by filters.\nIn order to get the results in CSV format, Accepts header must be filled with ` + "`" + `text/csv` + "`" + ` value.\nNote that csv output doesn't process pagination and returns first 5000 records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get Azure resources",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetResourcesRequest"
                        }
                    },
                    {
                        "enum": [
                            "application/json",
                            "text/csv"
                        ],
                        "type": "string",
                        "description": "Accept header",
                        "name": "accept",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ],
                        "type": "string",
                        "description": "Common filter",
                        "name": "common",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetAzureResourceResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return resource categories and number of resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CategoriesResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/count": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Count resources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/distribution": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns distribution of resource for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "AWS",
                            "Azure",
                            "all"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/filters": {
            "post": {
                "description": "Getting resource filters by filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/csv"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get resource filters",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GetFiltersRequest"
                        }
                    },
                    {
                        "enum": [
                            "true",
                            "false",
                            "all"
                        ],
                        "type": "string",
                        "description": "Common filter",
                        "name": "common",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetFiltersResponse"
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/top/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns top n accounts of specified provider by resource count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopAccountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/top/growing/accounts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns top n accounts of specified provider by resource count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "1d",
                            "1w",
                            "3m",
                            "1y"
                        ],
                        "type": "string",
                        "description": "TimeWindow",
                        "name": "timeWindow",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopAccountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/top/regions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Returns top n regions of specified provider by resource count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SourceId",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CategoriesResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/top/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns top n services of specified provider by resource count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TopServicesResponse"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/resources/trend": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns trend of resource growth for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "24h",
                            "1w",
                            "3m",
                            "1y",
                            "max"
                        ],
                        "type": "string",
                        "description": "Time Window",
                        "name": "timeWindow",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TrendDataPoint"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v1/services/distribution": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Returns distribution of services for specific account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ServiceDistributionItem"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return list of categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/inventory/api/v2/metrics/categorized": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Return categorized metrics, their value and their history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SubCategory",
                        "name": "subCategory",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CategorizedMetricsResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/connectors": {
            "get": {
                "description": "Getting connectors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get connectors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/connector.ConnectorCount"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/connectors/categories": {
            "get": {
                "description": "Getting connector categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get connector categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/connector.Category"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/aws/accounts": {
            "post": {
                "description": "If the account is part of an organization and the account has premission to list the accounts, it will return all the accounts in that organization. Otherwise, it will return the single account these credentials belong to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available AWS accounts given the credentials.",
                "parameters": [
                    {
                        "description": "AccessKey",
                        "name": "accessKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "SecretKey",
                        "name": "secretKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAWSAccountsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/azure/subscriptions": {
            "post": {
                "description": "Returning the list of available Azure subscriptions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available Azure subscriptions.",
                "parameters": [
                    {
                        "description": "TenantId",
                        "name": "tenantId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ClientId",
                        "name": "clientId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ClientSecret",
                        "name": "clientSecret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAzureSubscriptionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/discover/azure/subscriptions/spn": {
            "post": {
                "description": "Returning the list of available Azure subscriptions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns the list of available Azure subscriptions.",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DiscoverAzureSubscriptionsSPNRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DiscoverAzureSubscriptionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/providers": {
            "get": {
                "description": "Getting cloud providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/providers/types": {
            "get": {
                "description": "Getting provider types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get provider types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ProviderType"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/aws": {
            "post": {
                "description": "Creating AWS source",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create AWS source",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAWS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/azure": {
            "post": {
                "description": "Creating Azure source",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create Azure source",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAzure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/azure/spn": {
            "post": {
                "description": "Creating Azure source with SPN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create Azure source with SPN",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "description",
                        "name": "description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAzure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSourceResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/source/{sourceId}": {
            "get": {
                "description": "Returning single source either AWS / Azure.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting a single source either AWS / Azure.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Delete a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/onboard/api/v1/source/{sourceId}/credentials": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Put source credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get source credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "sourceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/onboard/api/v1/source/{sourceId}/disable": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Disable a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/onboard/api/v1/source/{sourceId}/enable": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Enable a single source",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SourceID",
                        "name": "sourceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/onboard/api/v1/sources": {
            "get": {
                "description": "Returning a list of sources including both AWS and Azure unless filtered by Type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a list of sources",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Returning a list of sources including both AWS and Azure unless filtered by Type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a list of sources",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.GetSourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source"
                            }
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/sources/count": {
            "get": {
                "description": "Returning a count of sources including both AWS and Azure unless filtered by Type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Returns a count of sources",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/spn/azure": {
            "post": {
                "description": "Creating Azure SPN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Create Azure SPN",
                "parameters": [
                    {
                        "description": "name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SourceConfigAzure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSPNResponse"
                        }
                    }
                }
            }
        },
        "/onboard/api/v1/spn/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "List SPN credentials",
                "responses": {}
            }
        },
        "/onboard/api/v1/spn/{spnId}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Put SPN credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SPN ID",
                        "name": "spnId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Get SPN credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SPN ID",
                        "name": "spnId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "onboard"
                ],
                "summary": "Delete SPN credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SPN ID",
                        "name": "spnId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/api/v1/compliance/report/last/completed": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get last completed compliance report",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/insight": {
            "get": {
                "description": "Listing insights",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "insights"
                ],
                "summary": "List insights",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ListInsightsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Insight"
                            }
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "insights"
                ],
                "summary": "Create a new insight",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateInsightRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/insight/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "insights"
                ],
                "summary": "Delete an insight",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/schedule/api/v1/resource_type/{provider}": {
            "get": {
                "description": "get resource type by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "get resource type by provider",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "azure"
                        ],
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ResourceTypeDetail"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources": {
            "get": {
                "description": "Getting all of Keibi sources",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List Sources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}": {
            "get": {
                "description": "Getting Keibi source by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get Source by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source"
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/compliance": {
            "get": {
                "description": "List source compliance reports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List source compliance reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "From Time (TimeRange)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "To Time (TimeRange)",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ComplianceReport"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/compliance/refresh": {
            "post": {
                "description": "Run compliance report jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Run compliance report jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/describe": {
            "get": {
                "description": "List source describe jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "List source describe jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DescribeSource"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/api/v1/sources/{source_id}/jobs/describe/refresh": {
            "post": {
                "description": "Run describe jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Run describe jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SourceID",
                        "name": "source_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/workspace/api/v1/workspace": {
            "post": {
                "description": "Returns workspace created",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Create workspace for workspace service",
                "parameters": [
                    {
                        "description": "Create workspace request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CreateWorkspaceResponse"
                        }
                    }
                }
            }
        },
        "/workspace/api/v1/workspace/:workspace_id": {
            "delete": {
                "description": "Delete workspace with workspace id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Delete workspace for workspace service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v1/workspace/:workspace_id/resume": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Resume workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v1/workspace/:workspace_id/suspend": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Suspend workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/api/v1/workspace/{workspace_id}/backup": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "lists backup of workspace",
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "perform backup of workspace",
                "responses": {}
            }
        },
        "/workspace/api/v1/workspace/{workspace_id}/backup/restores": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "lists restore of workspace",
                "responses": {}
            }
        },
        "/workspace/api/v1/workspace/{workspace_id}/backup/{backup_name}/restore": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "perform restore of backup of workspace",
                "responses": {}
            }
        },
        "/workspace/api/v1/workspace/{workspace_id}/owner": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Change ownership of workspace",
                "parameters": [
                    {
                        "description": "Change ownership request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChangeWorkspaceOwnershipRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/workspace/api/v1/workspaces": {
            "get": {
                "description": "Returns all workspaces with owner id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "List all workspaces with owner id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.WorkspaceResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspace/api/v1/workspaces/limits/byid/{workspace_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get workspace limits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace Name",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.WorkspaceLimits"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/api/v1/workspaces/limits/{workspace_name}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get workspace limits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace Name",
                        "name": "workspace_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Ignore usage",
                        "name": "ignore_usage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.WorkspaceLimitsUsage"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AWSResource": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "resourceCategory": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                }
            }
        },
        "api.AccountResourceCountResponse": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "lastInventory": {
                    "type": "string"
                },
                "onboardDate": {
                    "type": "string"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "resourceCount": {
                    "type": "integer"
                },
                "sourceID": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "api.Alarms": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "policy": {
                    "$ref": "#/definitions/types.FullPolicy"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.AllResource": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "resourceCategory": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                }
            }
        },
        "api.AzureResource": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "resourceCategory": {
                    "type": "string"
                },
                "resourceGroup": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                }
            }
        },
        "api.Benchmark": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Policy"
                    }
                },
                "provider": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.BenchmarkAssignedSource": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "integer"
                },
                "connection": {
                    "$ref": "#/definitions/types.FullConnection"
                }
            }
        },
        "api.BenchmarkAssignment": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "integer"
                },
                "benchmarkId": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "string"
                }
            }
        },
        "api.BenchmarkSummary": {
            "type": "object",
            "properties": {
                "assignedConnectionsCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.BenchmarkSummaryPolicySummary"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.BenchmarkSummaryResourceSummary"
                    }
                },
                "shortSummary": {
                    "$ref": "#/definitions/types.ComplianceResultShortSummary"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "totalConnectionResources": {
                    "type": "integer"
                },
                "trend": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Datapoint"
                    }
                }
            }
        },
        "api.BenchmarkSummaryConnectionSummary": {
            "type": "object",
            "properties": {
                "connection": {
                    "$ref": "#/definitions/types.FullConnection"
                },
                "shortSummary": {
                    "$ref": "#/definitions/types.ComplianceResultShortSummary"
                }
            }
        },
        "api.BenchmarkSummaryPolicySummary": {
            "type": "object",
            "properties": {
                "policy": {
                    "$ref": "#/definitions/types.FullPolicy"
                },
                "shortSummary": {
                    "$ref": "#/definitions/types.ComplianceResultShortSummary"
                }
            }
        },
        "api.BenchmarkSummaryResourceSummary": {
            "type": "object",
            "properties": {
                "resource": {
                    "$ref": "#/definitions/types.FullResource"
                },
                "shortSummary": {
                    "$ref": "#/definitions/types.ComplianceResultShortSummary"
                }
            }
        },
        "api.CategoriesResponse": {
            "type": "object",
            "properties": {
                "lastDayCount": {
                    "type": "integer"
                },
                "lastQuarterCount": {
                    "type": "integer"
                },
                "lastWeekCount": {
                    "type": "integer"
                },
                "lastYearCount": {
                    "type": "integer"
                },
                "resourceCount": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "api.CategorizedMetricsResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/api.ResourceTypeResponse"
                        }
                    }
                }
            }
        },
        "api.ChangeWorkspaceOwnershipRequest": {
            "type": "object",
            "properties": {
                "newOwnerUserID": {
                    "type": "string"
                }
            }
        },
        "api.ComplianceReport": {
            "type": "object",
            "properties": {
                "failureMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reportCreatedAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "api.ConnectionFull": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.CreateInsightRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "internal": {
                    "type": "boolean"
                },
                "provider": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "smartQueryID": {
                    "type": "integer"
                }
            }
        },
        "api.CreateSPNResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.CreateSourceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.CreateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                }
            }
        },
        "api.CreateWorkspaceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.Datapoint": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "api.DescribeResource": {
            "type": "object",
            "properties": {
                "failureMessage": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DescribeSource": {
            "type": "object",
            "properties": {
                "describeResourceJobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.DescribeResource"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAWSAccountsResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "description": "Nil if not part of an AWS organization",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAzureSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                }
            }
        },
        "api.DiscoverAzureSubscriptionsSPNRequest": {
            "type": "object",
            "properties": {
                "spnId": {
                    "type": "string"
                }
            }
        },
        "api.Filters": {
            "description": "if you provide two values for same filter OR operation would be used if you provide value for two filters AND operation would be used",
            "type": "object",
            "properties": {
                "category": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceType": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceID": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. {})",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.FindingFilters": {
            "type": "object",
            "properties": {
                "benchmarkID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "findingStatus": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policyID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.FindingResponseFilters": {
            "type": "object",
            "properties": {
                "benchmarks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FullBenchmark"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FullConnection"
                    }
                },
                "findingStatus": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FullPolicy"
                    }
                },
                "provider": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceTypeID": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FullResourceType"
                    }
                },
                "severity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.FindingSortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "resourceID",
                        "resourceName",
                        "resourceType",
                        "serviceName",
                        "category",
                        "resourceLocation",
                        "status",
                        "describedAt",
                        "evaluatedAt",
                        "sourceID",
                        "connectionProviderID",
                        "connectionProviderName",
                        "sourceType",
                        "benchmarkID",
                        "policyID",
                        "policySeverity"
                    ]
                }
            }
        },
        "api.GetAWSResourceResponse": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AWSResource"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "api.GetAzureResourceResponse": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AzureResource"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "api.GetBenchmarkInsightResponse": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.InsightRecord"
                    }
                },
                "topAccount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.InsightRecord"
                    }
                },
                "topCategory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.InsightRecord"
                    }
                },
                "topResourceType": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.InsightRecord"
                    }
                }
            }
        },
        "api.GetBenchmarksSummaryResponse": {
            "type": "object",
            "properties": {
                "benchmarks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.BenchmarkSummary"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.BenchmarkSummaryConnectionSummary"
                    }
                },
                "shortSummary": {
                    "$ref": "#/definitions/types.ComplianceResultShortSummary"
                },
                "totalAssets": {
                    "type": "integer"
                }
            }
        },
        "api.GetFiltersRequest": {
            "type": "object",
            "required": [
                "filters"
            ],
            "properties": {
                "filters": {
                    "description": "search filters",
                    "$ref": "#/definitions/api.ResourceFilters"
                },
                "query": {
                    "description": "search query",
                    "type": "string"
                }
            }
        },
        "api.GetFiltersResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "search filters",
                    "$ref": "#/definitions/api.ResourceFiltersResponse"
                }
            }
        },
        "api.GetFindingDetailsResponse": {
            "type": "object",
            "properties": {
                "alarms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Alarms"
                    }
                },
                "connection": {
                    "$ref": "#/definitions/types.FullConnection"
                },
                "createdAt": {
                    "type": "integer"
                },
                "policyDescription": {
                    "type": "string"
                },
                "policyTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "reason": {
                    "type": "string"
                },
                "resource": {
                    "$ref": "#/definitions/types.FullResource"
                },
                "resourceType": {
                    "$ref": "#/definitions/types.FullResourceType"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "api.GetFindingsFiltersResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/api.FindingResponseFilters"
                }
            }
        },
        "api.GetFindingsMetricsResponse": {
            "type": "object",
            "properties": {
                "failedFindings": {
                    "type": "integer"
                },
                "passedFindings": {
                    "type": "integer"
                },
                "totalFindings": {
                    "type": "integer"
                },
                "unknownFindings": {
                    "type": "integer"
                }
            }
        },
        "api.GetFindingsRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "filters": {
                    "$ref": "#/definitions/api.FindingFilters"
                },
                "page": {
                    "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_compliance_api.Page"
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.FindingSortItem"
                    }
                }
            }
        },
        "api.GetFindingsResponse": {
            "type": "object",
            "properties": {
                "findings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/es.Finding"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "api.GetResourceRequest": {
            "type": "object",
            "required": [
                "ID",
                "resourceType"
            ],
            "properties": {
                "ID": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "api.GetResourcesRequest": {
            "type": "object",
            "required": [
                "filters",
                "page"
            ],
            "properties": {
                "filters": {
                    "description": "search filters",
                    "$ref": "#/definitions/api.Filters"
                },
                "page": {
                    "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page"
                },
                "query": {
                    "description": "search query",
                    "type": "string"
                },
                "sorts": {
                    "description": "NOTE: we don't support multi-field sort for now, if sort is empty, results would be sorted by first column",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ResourceSortItem"
                    }
                }
            }
        },
        "api.GetResourcesResponse": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AllResource"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "api.GetSourcesRequest": {
            "type": "object",
            "properties": {
                "source_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GetTopFieldRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "field": {
                    "type": "string"
                },
                "filters": {
                    "$ref": "#/definitions/api.FindingFilters"
                }
            }
        },
        "api.GetTopFieldResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.TopFieldRecord"
                    }
                }
            }
        },
        "api.Insight": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "smartQueryID": {
                    "type": "integer"
                }
            }
        },
        "api.InsightRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "api.InviteItem": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api.InviteResponse": {
            "type": "object",
            "properties": {
                "inviteId": {
                    "type": "string"
                }
            }
        },
        "api.ListInsightResultsRequest": {
            "type": "object",
            "properties": {
                "descriptionFilter": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ListInsightsRequest": {
            "type": "object",
            "properties": {
                "descriptionFilter": {
                    "type": "string"
                }
            }
        },
        "api.ListQueryRequest": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "providerFilter": {
                    "type": "string"
                },
                "titleFilter": {
                    "type": "string"
                }
            }
        },
        "api.LocationByProviderResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.MetricsResponse": {
            "type": "object",
            "properties": {
                "lastDayValue": {
                    "type": "integer"
                },
                "lastQuarterValue": {
                    "type": "integer"
                },
                "lastWeekValue": {
                    "type": "integer"
                },
                "lastYearValue": {
                    "type": "integer"
                },
                "metricsName": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "api.Policy": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "commandLineRemedation": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "keibiManaged": {
                    "type": "boolean"
                },
                "manualRemedation": {
                    "type": "string"
                },
                "manualVerification": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "queryToRun": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "subCategory": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.Provider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ProviderType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "coming_soon",
                        "disabled"
                    ]
                },
                "typeName": {
                    "type": "string"
                }
            }
        },
        "api.ResourceFilters": {
            "description": "if you provide two values for same filter OR operation would be used if you provide value for two filters AND operation would be used",
            "type": "object",
            "properties": {
                "category": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connections": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceType": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagKeys": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagValues": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.ResourceFiltersResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connections": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ConnectionFull"
                    }
                },
                "location": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceType": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ResourceTypeFull"
                    }
                },
                "service": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagKeys": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagValues": {
                    "description": "if you dont need to use this filter, leave them empty. (e.g. [])",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.ResourceSortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "resourceID",
                        "resourceName",
                        "provider",
                        "resourceType",
                        "resourceGroup",
                        "location",
                        "connectionID"
                    ]
                }
            }
        },
        "api.ResourceTypeDetail": {
            "type": "object",
            "properties": {
                "resourceTypeARN": {
                    "type": "string"
                },
                "resourceTypeName": {
                    "type": "string"
                }
            }
        },
        "api.ResourceTypeFull": {
            "type": "object",
            "properties": {
                "resource_type_arn": {
                    "type": "string"
                },
                "resource_type_name": {
                    "type": "string"
                }
            }
        },
        "api.ResourceTypeResponse": {
            "type": "object",
            "properties": {
                "lastDayCount": {
                    "type": "integer"
                },
                "lastQuarterCount": {
                    "type": "integer"
                },
                "lastWeekCount": {
                    "type": "integer"
                },
                "lastYearCount": {
                    "type": "integer"
                },
                "resourceCount": {
                    "type": "integer"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "api.RoleBinding": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "workspaceName": {
                    "type": "string"
                }
            }
        },
        "api.RunQueryRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "page": {
                    "$ref": "#/definitions/gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page"
                },
                "sorts": {
                    "description": "NOTE: we don't support multi-field sort for now, if sort is empty, results would be sorted by first column",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SmartQuerySortItem"
                    }
                }
            }
        },
        "api.RunQueryResponse": {
            "type": "object",
            "properties": {
                "headers": {
                    "description": "column names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "type": "string"
                },
                "result": {
                    "description": "result of query. in order to access a specific cell please use Result[Row][Column]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.ServiceDistributionItem": {
            "type": "object",
            "properties": {
                "distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "api.SmartQueryItem": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.SmartQuerySortItem": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "field": {
                    "description": "fill this with column name",
                    "type": "string"
                }
            }
        },
        "api.SourceConfigAWS": {
            "type": "object",
            "required": [
                "accessKey",
                "accountId",
                "secretKey"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secretKey": {
                    "type": "string"
                }
            }
        },
        "api.SourceConfigAzure": {
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "subscriptionId",
                "tenantId"
            ],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "api.TopAccountCostResponse": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "sourceID": {
                    "type": "string"
                }
            }
        },
        "api.TopAccountResponse": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "resourceCount": {
                    "type": "integer"
                },
                "sourceID": {
                    "type": "string"
                }
            }
        },
        "api.TopFieldRecord": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.TopServiceCostResponse": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "api.TopServicesResponse": {
            "type": "object",
            "properties": {
                "lastDayCount": {
                    "type": "integer"
                },
                "lastQuarterCount": {
                    "type": "integer"
                },
                "lastWeekCount": {
                    "type": "integer"
                },
                "lastYearCount": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "resourceCount": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "api.TrendDataPoint": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "api.WorkspaceLimits": {
            "type": "object",
            "properties": {
                "maxConnections": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxUsers": {
                    "type": "integer"
                }
            }
        },
        "api.WorkspaceLimitsUsage": {
            "type": "object",
            "properties": {
                "currentConnections": {
                    "type": "integer"
                },
                "currentResources": {
                    "type": "integer"
                },
                "currentUsers": {
                    "type": "integer"
                },
                "maxConnections": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxUsers": {
                    "type": "integer"
                }
            }
        },
        "api.WorkspaceResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.WorkspaceRoleBinding": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "connector.Category": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                }
            }
        },
        "connector.ConnectorCount": {
            "type": "object",
            "properties": {
                "connection_count": {
                    "type": "integer"
                },
                "connector_description": {
                    "type": "string"
                },
                "connector_icon": {
                    "type": "string"
                },
                "connector_id": {
                    "type": "string"
                },
                "connector_name": {
                    "type": "string"
                },
                "connector_popular": {
                    "type": "string"
                },
                "connector_status": {
                    "type": "string"
                },
                "connector_type": {
                    "type": "string"
                },
                "source_type": {
                    "type": "string"
                }
            }
        },
        "es.Finding": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "benchmarkID": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "complianceJobID": {
                    "type": "integer"
                },
                "connectionProviderID": {
                    "type": "string"
                },
                "connectionProviderName": {
                    "type": "string"
                },
                "describedAt": {
                    "type": "integer"
                },
                "evaluatedAt": {
                    "type": "integer"
                },
                "policyID": {
                    "type": "string"
                },
                "policySeverity": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "resourceID": {
                    "type": "string"
                },
                "resourceLocation": {
                    "type": "string"
                },
                "resourceName": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "scheduleJobID": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                },
                "sourceID": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_compliance_api.Page": {
            "type": "object",
            "properties": {
                "no": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_describe_api.Source": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lastComplianceReportAt": {
                    "type": "string"
                },
                "lastDescribeJobStatus": {
                    "type": "string"
                },
                "lastDescribedAt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_inventory_api.Page": {
            "type": "object",
            "properties": {
                "no": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "gitlab.com_keibiengine_keibi-engine_pkg_onboard_api.Source": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "onboardDate": {
                    "type": "string"
                },
                "providerConnectionID": {
                    "type": "string"
                },
                "providerConnectionName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.ComplianceResultShortSummary": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "passed": {
                    "type": "integer"
                }
            }
        },
        "types.ComplianceResultSummary": {
            "type": "object",
            "properties": {
                "alarmCount": {
                    "type": "integer"
                },
                "errorCount": {
                    "type": "integer"
                },
                "infoCount": {
                    "type": "integer"
                },
                "okCount": {
                    "type": "integer"
                },
                "skipCount": {
                    "type": "integer"
                }
            }
        },
        "types.FullBenchmark": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "types.FullConnection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "providerID": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                }
            }
        },
        "types.FullPolicy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "types.FullResource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.FullResourceType": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "dev-cluster.keibi.io",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "Keibi Service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
